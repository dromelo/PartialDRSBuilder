qN	qID	type	question	DRS-question	DRS-Ont-question	SPARQL-question	Result-question	template-id	SPARQL
1	Q0002	SINGLE_FACT	 "Which papers did the author Rodriguez, S. write?" 	dEntities=[ DEntity(X1, paper, papers, NOUN, which, 2, null),  DEntity(X2, author, author, NOUN, the, 5, null),  DEntity(X3, S., S., PROPN, null, 8, null),  DEntity(X4, write, write, VERB, null, 9, null)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- []),  DCondition(X2, has_text, author, propriedades= [] --- []),  DCondition(X2, has_name, Rodriguez, propriedades= [] --- []),  DCondition(X3, has_name, S., propriedades= [] --- []),  DCondition(X4, has_text, write, propriedades= [] --- []),  DCondition(X4, obj, X1, propriedades= [] --- []),  DCondition(X4, subj, X2, propriedades= [] --- []),  DCondition(X4, subj, X3, propriedades= [] --- [])]	 dEntities=[ DEntity(X1, paper, papers, NOUN, which, null, Document),  DEntity(X2, author, author, NOUN, the, null, Person),  DEntity(X3, S., S., PROPN, null, null, Person),  DEntity(X4, write, write, VERB, null, null, Create),  DEntity(X5, null, null, null, null, null, Query),  DEntity(X6, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Rodriguez, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, S., propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, write, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X1, propriedades= [create_what] --- []),  DCondition(X4, subj, X2, propriedades= [who_create] --- []),  DCondition(X4, subj, X3, propriedades= [who_create] --- []),  DCondition(X5, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, obj, X1, propriedades= [select] --- []),  DCondition(X5, subj, X6, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 20  numEntitiesNOk = 0  numClassesOk = 3	SELECT  ?document1 WHERE {  ?document1 dblp:authoredBy ?person1 .  ?document1 dblp:authoredBy ?person2 .  ?person1 dblp:creatorName ?personName1 . ?person2 dblp:creatorName ?personName2 . filter (regex(?personName1,"Rodriguez","i")). filter (regex(?personName2,"S.","i")). }	3	TC01	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/04/6636> }" }
2	Q0004	SINGLE_FACT	 "Which publications did Neamati, D. author?" 	n.a.	n.a.	n.a.	0	TC01	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/304/4294> }" }
3	Q0012	SINGLE_FACT	 "What are the papers written by Omer L.?" 	dEntities=[ DEntity(X2, paper, papers, NOUN, the, 4, null),  DEntity(X3, write, written, VERB, null, 5, null),  DEntity(X4, Omer L.?, Omer, PROPN, null, 7, null)],  dConditions=[ DCondition(X2, has_text, paper, propriedades= [] --- []),  DCondition(X3, has_text, write, propriedades= [] --- []),  DCondition(X4, has_name, Omer L.?, propriedades= [] --- []),  DCondition(X2, what, true, propriedades= [] --- []),  DCondition(X3, nsubj:pass, X2, propriedades= [] --- []),  DCondition(X3, obl_by, X4, propriedades= [] --- [])]	dEntities=[ DEntity(X1, paper, papers, NOUN, the, null, Document),  DEntity(X2, write, written, VERB, null, null, Create),  DEntity(X3, Omer L.?, Omer, PROPN, null, null, Person),  DEntity(X4, null, null, null, null, null, Query),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, write, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, Omer L.?, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, nsubj:pass, X1, propriedades= [create_what] --- []),  DCondition(X2, obl_by, X3, propriedades= [who_create] --- []),  DCondition(X4, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X1, propriedades= [select] --- []),  DCondition(X4, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 16  numEntitiesNOk = 0  numClassesOk = 2]	SELECT ?document1 WHERE { ?document1 dblp:authoredBy ?person1 .  ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Omer L.?","i")). }	3	TC01	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/93/5969> }" }
4	Q0026	SINGLE_FACT	 "What are the papers written by the person João Manuel R. S. Tavares?" 	dEntities=[ DEntity(X1, paper, papers, NOUN, the, 4, null),  DEntity(X2, write, written, VERB, null, 5, null),  DEntity(X3, person, person, NOUN, the, 8, null)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- []),  DCondition(X2, has_text, write, propriedades= [] --- []),  DCondition(X3, has_text, person, propriedades= [] --- []),  DCondition(X3, has_name, João Manuel R. S. Tavares, propriedades= [] --- []),  DCondition(X1, what, true, propriedades= [] --- []),  DCondition(X2, nsubj:pass, X1, propriedades= [] --- []),  DCondition(X2, obl_by, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, paper, papers, NOUN, the, null, Document),  DEntity(X2, write, written, VERB, null, null, Create),  DEntity(X3, person, person, NOUN, the, null, Person),  DEntity(X4, null, null, null, null, null, Query),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, write, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, person, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, João Manuel R. S. Tavares, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, nsubj:pass, X1, propriedades= [create_what] --- []),  DCondition(X2, obl_by, X3, propriedades= [who_create] --- []),  DCondition(X4, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X1, propriedades= [select] --- []),  DCondition(X4, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 16  numEntitiesNOk = 0  numClassesOk = 3]	SELECT ?document1 WHERE { ?document1 dblp:authoredBy ?person1 .  ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"João Manuel R. S. Tavares","i")). } "	4	TC01	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/t/JoaoManuelRSTavares> }" }
5	Q0091	SINGLE_FACT	 "What are the papers written by Matti O. Jokinen?" 	dEntities=[ DEntity(X2, paper, papers, NOUN, the, 4, null),  DEntity(X3, write, written, VERB, null, 5, null),  DEntity(X4, Matti O. Jokinen, Matti, PROPN, null, 7, null)],  dConditions=[ DCondition(X2, has_text, paper, propriedades= [] --- []),  DCondition(X3, has_text, write, propriedades= [] --- []),  DCondition(X4, has_name, Matti O. Jokinen, propriedades= [] --- []),  DCondition(X2, what, true, propriedades= [] --- []),  DCondition(X3, nsubj:pass, X2, propriedades= [] --- []),  DCondition(X3, obl_by, X4, propriedades= [] --- [])] 	dEntities=[ DEntity(X1, paper, papers, NOUN, the, null, Document),  DEntity(X2, write, written, VERB, null, null, Create),  DEntity(X3, Matti O. Jokinen, Matti, PROPN, null, null, Person),  DEntity(X4, null, null, null, null, null, Query),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, write, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, Matti O. Jokinen, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, nsubj:pass, X1, propriedades= [create_what] --- []),  DCondition(X2, obl_by, X3, propriedades= [who_create] --- []),  DCondition(X4, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X1, propriedades= [select] --- []),  DCondition(X4, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 16  numEntitiesNOk = 0  numClassesOk = 2]	SELECT ?document1 WHERE { ?document1 dblp:authoredBy ?person1 .  ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,""Matti O. Jokinen"",""i"")). } "	4	TC01	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/51/4130> }" }
6	Q0007	SINGLE_FACT	 "The author Sameh S. Askar is primarily affiliated to which institution?" 	dEntities=[ DEntity(X1, author, author, NOUN, the, 2, null),  DEntity(X3, affiliate, affiliated, VERB, null, 8, null),  DEntity(X4, institution, institution, NOUN, which, 11, null)],  dConditions=[ DCondition(X1, has_text, author, propriedades= [] --- []),  DCondition(X1, has_name, Sameh S. Askar, propriedades= [] --- []),  DCondition(X3, has_text, affiliate, propriedades= [] --- []),  DCondition(X4, has_text, institution, propriedades= [] --- []),  DCondition(X3, nsubj:pass, X1, propriedades= [] --- []),  DCondition(X3, mod, primarily, propriedades= [] --- []),  DCondition(X3, obl_to, X4, propriedades= [] --- [])]	dEntities=[ DEntity(X1, author, author, NOUN, the, null, Person),  DEntity(X2, affiliate, affiliated, VERB, null, null, Associate),  DEntity(X3, institution, institution, NOUN, which, null, ConceptPerson),  DEntity(X4, null, null, null, null, null, Query),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, has_name, Sameh S. Askar, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, affiliate, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, institution, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, nsubj:pass, X1, propriedades= [assoc_Person] --- []),  DCondition(X2, mod, primarily, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, obl_to, X3, propriedades= [assoc_ConcPerson] --- []),  DCondition(X4, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X3, propriedades= [select] --- []),  DCondition(X4, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 12  numEntitiesNOk = 0  numClassesOk = 2]]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Sameh S. Askar","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"affiliation","i")). filter (regex(?prop,"primary","i")). } 	4	TC02	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/141/4165> <https://dblp.org/rdf/schema#primaryAffiliation> ?answer }" }
7	Q0037	SINGLE_FACT	 "Mention the primary affiliation of Khaled Salah." 	"dEntities=[ DEntity(X1, mention, Mention, VERB, null, 1, null),  DEntity(X2, affiliation, affiliation, NOUN, the, 4, null),  DEntity(X3, Khaled Salah, Khaled, PROPN, null, 6, null)],  dConditions=[ DCondition(X1, has_text, mention, propriedades= [] --- []),  DCondition(X2, has_text, affiliation, propriedades= [] --- []),  DCondition(X3, has_name, Khaled Salah, propriedades= [] --- []),  DCondition(X2, mod, primary, propriedades= [] --- []),  DCondition(X1, obj, X2, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- [])]"	dEntities=[ DEntity(X1, mention, Mention, VERB, null, null, Query),  DEntity(X2, affiliation, affiliation, NOUN, the, null, ConceptPerson),  DEntity(X3, Khaled Salah, Khaled, PROPN, null, null, Person),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, mention, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, affiliation, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X3, has_name, Khaled Salah, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, mod, primary, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X1, obj, X2, propriedades= [select] --- []),  DCondition(X2, of, X3, propriedades= [conc_of_Person] --- []),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, null, propriedades= [] --- []),  DCondition(X1, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 8  numEntitiesNOk = 0  numClassesOk = 2]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"  Khaled Salah","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"affiliation","i")). filter (regex(?prop,"primary","i")). } 	4	TC02	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/s/KhaledSalah> <https://dblp.org/rdf/schema#primaryAffiliation> ?answer }" }
8	Q0049	SINGLE_FACT	 "What is the primary affiliation of the author Shengli W.?" 	dEntities=[ DEntity(X1, affiliation, affiliation, NOUN, the, 5, null),  DEntity(X2, author, author, NOUN, the, 8, null)],  dConditions=[ DCondition(X1, has_text, affiliation, propriedades= [] --- []),  DCondition(X2, has_text, author, propriedades= [] --- []),  DCondition(X2, has_name, Shengli W., propriedades= [] --- []),  DCondition(X1, mod, primary, propriedades= [] --- []),  DCondition(X1, what, true, propriedades= [] --- []),  DCondition(X1, of, X2, propriedades= [] --- [])]	dEntities=[ DEntity(X1, affiliation, affiliation, NOUN, the, null, ConceptPerson),  DEntity(X2, author, author, NOUN, the, null, Person),  DEntity(X3, null, null, null, null, null, Query),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, affiliation, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Shengli W., propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, mod, primary, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X1, of, X2, propriedades= [conc_of_Person] --- []),  DCondition(X3, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [select] --- []),  DCondition(X3, subj, X4, propriedades= [qQualifier] --- [])]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"  Shengli W.","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"affiliation","i")). filter (regex(?prop,"primary","i")). } 	4	TC02	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/w/ShengliWu> <https://dblp.org/rdf/schema#primaryAffiliation> ?answer }" }
9	Q0065	SINGLE_FACT	 "János Pach is primarily affiliated to which institution?" 	dEntities=[ DEntity(X1, János Pach, János, PROPN, null, 1, null),  DEntity(X2, affiliate, affiliated, VERB, null, 5, null),  DEntity(X3, institution, institution, NOUN, which, 8, null)],  dConditions=[ DCondition(X1, has_name, János Pach, propriedades= [] --- []),  DCondition(X2, has_text, affiliate, propriedades= [] --- []),  DCondition(X3, has_text, institution, propriedades= [] --- []),  DCondition(X2, nsubj:pass, X1, propriedades= [] --- []),  DCondition(X2, mod, primarily, propriedades= [] --- []),  DCondition(X2, obl_to, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, János Pach, János, PROPN, null, null, Person),  DEntity(X2, affiliate, affiliated, VERB, null, null, Associate),  DEntity(X3, institution, institution, NOUN, which, null, ConceptPerson),  DEntity(X4, null, null, null, null, null, Query),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_name, János Pach, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, affiliate, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, institution, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, nsubj:pass, X1, propriedades= [assoc_Person] --- []),  DCondition(X2, mod, primarily, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, obl_to, X3, propriedades= [assoc_ConcPerson] --- []),  DCondition(X4, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X3, propriedades= [select] --- []),  DCondition(X4, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 12  numEntitiesNOk = 0  numClassesOk = 1]]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"János Pach","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"affiliation","i")). filter (regex(?prop,"primary","i")). } 	4	TC02	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/18/2119> <https://dblp.org/rdf/schema#primaryAffiliation> ?answer }" }
10	Q0085	SINGLE_FACT	 "Zukerman, I. is primarily affiliated to which institution?" 	dEntities=[ DEntity(X1, Zukerman i., Zukerman, PROPN, null, 1, null),  DEntity(X2, affiliate, affiliated, VERB, null, 6, null),  DEntity(X3, institution, institution, NOUN, which, 9, null)],  dConditions=[ DCondition(X1, has_name, Zukerman i., propriedades= [] --- []),  DCondition(X2, has_text, affiliate, propriedades= [] --- []),  DCondition(X3, has_text, institution, propriedades= [] --- []),  DCondition(X2, nsubj:pass, X1, propriedades= [] --- []),  DCondition(X2, mod, primarily, propriedades= [] --- []),  DCondition(X2, obl_to, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, Zukerman i., Zukerman, PROPN, null, null, Person),  DEntity(X2, affiliate, affiliated, VERB, null, null, Associate),  DEntity(X3, institution, institution, NOUN, which, null, ConceptPerson),  DEntity(X4, null, null, null, null, null, Query),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_name, Zukerman i., propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, affiliate, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, institution, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, nsubj:pass, X1, propriedades= [assoc_Person] --- []),  DCondition(X2, mod, primarily, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, obl_to, X3, propriedades= [assoc_ConcPerson] --- []),  DCondition(X4, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X3, propriedades= [select] --- []),  DCondition(X4, subj, X5, propriedades= [qQualifier] --- [])]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Zukerman i.","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"affiliation","i")). filter (regex(?prop,"primary","i")). } 	4	TC02	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/z/IngridZukerman> <https://dblp.org/rdf/schema#primaryAffiliation> ?answer }" }
11	Q0008	SINGLE_FACT	 "What is the ORCID of the person Matti R.?" 	dEntities=[ DEntity(X2, orcid, ORCID, NOUN, the, 4, null),  DEntity(X3, person, person, NOUN, the, 7, null)],  dConditions=[ DCondition(X2, has_text, orcid, propriedades= [] --- []),  DCondition(X3, has_text, person, propriedades= [] --- []),  DCondition(X3, has_name, Matti R.?, propriedades= [] --- []),  DCondition(X2, what, true, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, orcid, ORCID, NOUN, the, null, ConceptPerson),  DEntity(X2, person, person, NOUN, the, null, Person),  DEntity(X3, null, null, null, null, null, Query),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, orcid, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, has_text, person, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Matti R.?, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X1, of, X2, propriedades= [conc_of_Person] --- []),  DCondition(X3, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [select] --- []),  DCondition(X3, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 12  numEntitiesNOk = 0  numClassesOk = 1]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Matti R.","i")) . ?person1 ?prop1 ?conceptPerson1 . filter (regex(?prop,"orcid","i")). } 	4	TC03	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/r/MattiRossi> <https://dblp.org/rdf/schema#orcid> ?answer }" }
12	Q0018	SINGLE_FACT	 "Mention the ORCID of the researcher El-Gayar, Omar F.." 	dEntities=[ DEntity(X1, mention, Mention, VERB, null, 1, null),  DEntity(X2, orcid, ORCID, NOUN, the, 3, null),  DEntity(X3, researcher, researcher, NOUN, the, 6, null)],  dConditions=[ DCondition(X1, has_text, mention, propriedades= [] --- []),  DCondition(X2, has_text, orcid, propriedades= [] --- []),  DCondition(X3, has_text, researcher, propriedades= [] --- []),  DCondition(X3, has_name, El Gayar, propriedades= [] --- []),  DCondition(X3, has_name, Omar F., propriedades= [] --- []),  DCondition(X1, obj, X2, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- [])]	DEntity(X1, mention, Mention, VERB, null, null, Query),  DEntity(X2, orcid, ORCID, NOUN, the, null, ConceptPerson),  DEntity(X3, researcher, researcher, NOUN, the, null, Person),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, mention, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, orcid, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X3, has_text, researcher, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, El Gayar, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, Omar F., propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, obj, X2, propriedades= [select] --- []),  DCondition(X2, of, X3, propriedades= [conc_of_Person] --- []),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, null, propriedades= [] --- []),  DCondition(X1, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 8  numEntitiesNOk = 0  numClassesOk = 2]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"El-Gayar.","i")) . filter (regex(?personName1,"Omar F.","i")) . ?person1 ?prop1 ?conceptPerson1 . filter (regex(?prop,"orcid","i")). } 	4	TC03	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/16/304> <https://dblp.org/rdf/schema#orcid> ?answer }" }
13	Q0021	SINGLE_FACT	 "What is the ORCID of the person Goele Pipeleers?" 	dEntities=[ DEntity(X2, orcid, ORCID, NOUN, the, 4, null),  DEntity(X3, person, person, NOUN, the, 7, null)],  dConditions=[ DCondition(X2, has_text, orcid, propriedades= [] --- []),  DCondition(X3, has_text, person, propriedades= [] --- []),  DCondition(X3, has_name, Goele Pipeleer, propriedades= [] --- []),  DCondition(X2, what, true, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, orcid, ORCID, NOUN, the, null, ConceptPerson),  DEntity(X2, person, person, NOUN, the, null, Person),  DEntity(X3, null, null, null, null, null, Query),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, orcid, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, has_text, person, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Goele Pipeleer, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X1, of, X2, propriedades= [conc_of_Person] --- []),  DCondition(X3, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [select] --- []),  DCondition(X3, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 12  numEntitiesNOk = 0  numClassesOk = 1	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Goele Pipeleers","i")) . ?person1 ?prop1 ?conceptPerson1 . filter (regex(?prop,"orcid","i")) . } 	4	TC03	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/98/4973> <https://dblp.org/rdf/schema#orcid> ?answer }" }
14	Q0024	SINGLE_FACT	 "What is the ORCID of the person Hirschfeld, James W. P.?" 	dEntities=[ DEntity(X2, orcid, ORCID, NOUN, the, 4, null),  DEntity(X3, person, person, NOUN, the, 7, null)],  dConditions=[ DCondition(X2, has_text, orcid, propriedades= [] --- []),  DCondition(X3, has_text, person, propriedades= [] --- []),  DCondition(X3, has_name, Hirschfeld, propriedades= [] --- []),  DCondition(X3, has_name, James W. P., propriedades= [] --- []),  DCondition(X2, what, true, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, orcid, ORCID, NOUN, the, null, ConceptPerson),  DEntity(X2, person, person, NOUN, the, null, Person),  DEntity(X3, null, null, null, null, null, Query),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, orcid, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, has_text, person, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Hirschfeld, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, James W. P., propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X1, of, X2, propriedades= [conc_of_Person] --- []),  DCondition(X3, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [select] --- []),  DCondition(X3, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 12  numEntitiesNOk = 0  numClassesOk = 2]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Hirschfeld.","i")). filter (regex(?personName1,"James W. P.","i")). ?person1?prop1 ?conceptPerson1. filter (regex(?prop,"orcid","i")). } 	4	TC03	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/h/JWPHirschfeld> <https://dblp.org/rdf/schema#orcid> ?answer }" }
15	Q0029	SINGLE_FACT	 "Mention the ORCID of the researcher Turcanu, Ion." 	dEntities=[ DEntity(X1, mention, Mention, VERB, null, 1, null),  DEntity(X2, orcid, ORCID, NOUN, the, 3, null),  DEntity(X3, researcher, researcher, NOUN, the, 6, null)],  dConditions=[ DCondition(X1, has_text, mention, propriedades= [] --- []),  DCondition(X2, has_text, orcid, propriedades= [] --- []),  DCondition(X3, has_text, researcher, propriedades= [] --- []),  DCondition(X3, has_name, Ion Turcanu, propriedades= [] --- []),  DCondition(X1, obj, X2, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, mention, Mention, VERB, null, null, Query),  DEntity(X2, orcid, ORCID, NOUN, the, null, ConceptPerson),  DEntity(X3, researcher, researcher, NOUN, the, null, Person),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, mention, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, orcid, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X3, has_text, researcher, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, Ion Turcanu, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, obj, X2, propriedades= [select] --- []),  DCondition(X2, of, X3, propriedades= [conc_of_Person] --- []),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, null, propriedades= [] --- []),  DCondition(X1, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 8  numEntitiesNOk = 0  numClassesOk = 2	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Ion Turcanu","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"orcid","i")). } 	4	TC03	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/170/2615> <https://dblp.org/rdf/schema#orcid> ?answer }" }
16	Q0001	SINGLE_FACT	 "Show the Wikidata ID of the person Robert Schober." 	dEntities=[ DEntity(X1, show, Show, VERB, null, 1, null),  DEntity(X2, Wikidata, Wikidata, PROPN, null, 3, null),  DEntity(X3, id, ID, NOUN, the, 4, null),  DEntity(X4, person, person, NOUN, the, 7, null)],  dConditions=[ DCondition(X1, has_text, show, propriedades= [] --- []),  DCondition(X2, has_name, Wikidata, propriedades= [] --- []),  DCondition(X3, has_text, id, propriedades= [] --- []),  DCondition(X4, has_text, person, propriedades= [] --- []),  DCondition(X4, has_name, Robert Schober, propriedades= [] --- []),  DCondition(X3, of, X2, propriedades= [] --- []),  DCondition(X1, obj, X3, propriedades= [] --- []),  DCondition(X3, of, X4, propriedades= [] --- [])]	dEntities=[ DEntity(X1, show, Show, VERB, null, null, Query),  DEntity(X2, Wikidata, Wikidata, PROPN, null, null, ConceptPerson),  DEntity(X3, id, ID, NOUN, the, null, ConceptPerson),  DEntity(X4, person, person, NOUN, the, null, Person),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, show, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Wikidata, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X3, has_text, id, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X4, has_text, person, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, Robert Schober, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, of, X2, propriedades= [conc_of_conc_Person] --- []),  DCondition(X1, obj, X3, propriedades= [select] --- []),  DCondition(X3, of, X4, propriedades= [conc_of_Person] --- []),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, null, propriedades= [] --- []),  DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 12  numEntitiesNOk = 0  numClassesOk = 3]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Robert Schober","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"wikidata","i")). }	4	TC04	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/95/2265> <https://dblp.org/rdf/schema#wikidata> ?answer }" }
17	Q0006	SINGLE_FACT	 "What is the Wikidata ID of Pablo G. Tahoces?" 	DEntity(X1, Wikidata, Wikidata, PROPN, null, 4, null),  DEntity(X2, id, ID, NOUN, the, 5, null),  DEntity(X3, Pablo G. Tahoce, Pablo, PROPN, null, 7, null)],  dConditions=[ DCondition(X1, has_name, Wikidata, propriedades= [] --- []),  DCondition(X2, has_text, id, propriedades= [] --- []),  DCondition(X3, has_name, Pablo G. Tahoce, propriedades= [] --- []),  DCondition(X2, of, X1, propriedades= [] --- []),  DCondition(X2, what, true, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, Wikidata, Wikidata, PROPN, null, null, ConceptPerson),  DEntity(X2, id, ID, NOUN, the, null, ConceptPerson),  DEntity(X3, Pablo G. Tahoce, Pablo, PROPN, null, null, Person),  DEntity(X4, null, null, null, null, null, Query),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_name, Wikidata, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, has_text, id, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X3, has_name, Pablo G. Tahoce, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, of, X1, propriedades= [conc_of_conc_Person] --- []),  DCondition(X2, what, true, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, of, X3, propriedades= [conc_of_Person] --- []),  DCondition(X4, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X2, propriedades= [select] --- []),  DCondition(X4, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 16  numEntitiesNOk = 0  numClassesOk = 1]]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Pablo G. Tahoce","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"wikidata","i")). }	4	TC04	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/58/6070> <https://dblp.org/rdf/schema#wikidata> ?answer }" }
18	Q0022	SINGLE_FACT	 "The author Daniel S. Weld is associated with which Wikidata identifier?" 	dEntities=[ DEntity(X1, author, author, NOUN, the, 2, null),  DEntity(X3, associate, associated, VERB, null, 7, null),  DEntity(X4, identifier, identifier, NOUN, which, 11, null)],  dConditions=[ DCondition(X1, has_text, author, propriedades= [] --- []),  DCondition(X1, has_name, Daniel S. Weld, propriedades= [] --- []),  DCondition(X3, has_text, associate, propriedades= [] --- []),  DCondition(X4, has_text, identifier, propriedades= [] --- []),  DCondition(X3, nsubj:pass, X1, propriedades= [] --- []),  DCondition(X4, mod, Wikidata, propriedades= [] --- []),  DCondition(X3, obl_with, X4, propriedades= [] --- [])]	dEntities=[ DEntity(X1, author, author, NOUN, the, null, Person),  DEntity(X2, associate, associated, VERB, null, null, Associate),  DEntity(X3, identifier, identifier, NOUN, which, null, ConceptPerson),  DEntity(X4, null, null, null, null, null, Query),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, has_name, Daniel S. Weld, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, associate, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, identifier, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, nsubj:pass, X1, propriedades= [assoc_Person] --- []),  DCondition(X3, mod, Wikidata, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, obl_with, X3, propriedades= [assoc_ConcPerson] --- []),  DCondition(X4, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X3, propriedades= [select] --- []),  DCondition(X4, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 16  numEntitiesNOk = 0  numClassesOk = 2]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Daniel S. Weld","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"wikidata","i")). }	4	TC04	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/w/DanielSWeld> <https://dblp.org/rdf/schema#wikidata> ?answer }" }
19	Q0031	SINGLE_FACT	 "What is the Wikidata identifier of the author Borko Furht?" 	dEntities=[ DEntity(X2, Wikidata, Wikidata, PROPN, null, 4, null),  DEntity(X3, identifier, identifier, NOUN, the, 5, null),  DEntity(X4, author, author, NOUN, the, 8, null)],  dConditions=[ DCondition(X2, has_name, Wikidata, propriedades= [] --- []),  DCondition(X3, has_text, identifier, propriedades= [] --- []),  DCondition(X4, has_text, author, propriedades= [] --- []),  DCondition(X4, has_name, Borko Furht, propriedades= [] --- []),  DCondition(X3, of, X2, propriedades= [] --- []),  DCondition(X3, what, true, propriedades= [] --- []),  DCondition(X3, of, X4, propriedades= [] --- [])]	dEntities=[ DEntity(X1, Wikidata, Wikidata, PROPN, null, null, ConceptPerson),  DEntity(X2, identifier, identifier, NOUN, the, null, ConceptPerson),  DEntity(X3, author, author, NOUN, the, null, Person),  DEntity(X4, null, null, null, null, null, Query),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_name, Wikidata, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, has_text, identifier, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X3, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, Borko Furht, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, of, X1, propriedades= [conc_of_conc_Person] --- []),  DCondition(X2, what, true, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, of, X3, propriedades= [conc_of_Person] --- []),  DCondition(X4, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X2, propriedades= [select] --- []),  DCondition(X4, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 16  numEntitiesNOk = 0  numClassesOk = 1]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Borko Furht","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"wikidata","i")). }	4	TC04	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/f/BorkoFurht> <https://dblp.org/rdf/schema#wikidata> ?answer }" }
20	Q0047	SINGLE_FACT	 "What is the Wikidata ID of Offutt, A. Jefferson?" 	dEntities=[ DEntity(X2, Wikidata, Wikidata, PROPN, null, 4, null),  DEntity(X3, id, ID, NOUN, the, 5, null),  DEntity(X4, A. Jefferson Offutt, Offutt, PROPN, null, 7, null)],  dConditions=[ DCondition(X2, has_name, Wikidata, propriedades= [] --- []),  DCondition(X3, has_text, id, propriedades= [] --- []),  DCondition(X4, has_name, A. Jefferson Offutt, propriedades= [] --- []),  DCondition(X3, of, X2, propriedades= [] --- []),  DCondition(X3, what, true, propriedades= [] --- []),  DCondition(X3, of, X4, propriedades= [] --- [])]	dEntities=[ DEntity(X1, Wikidata, Wikidata, PROPN, null, null, ConceptPerson),  DEntity(X2, id, ID, NOUN, the, null, ConceptPerson),  DEntity(X3, A. Jefferson Offutt, Offutt, PROPN, null, null, Person),  DEntity(X4, null, null, null, null, null, Query),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_name, Wikidata, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, has_text, id, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X3, has_name, A. Jefferson Offutt, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, of, X1, propriedades= [conc_of_conc_Person] --- []),  DCondition(X2, what, true, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, of, X3, propriedades= [conc_of_Person] --- []),  DCondition(X4, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X2, propriedades= [select] --- []),  DCondition(X4, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 16  numEntitiesNOk = 0  numClassesOk = 1]]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"A. Jefferson Offutt","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"wikidata","i")). }	4	TC04	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/o/AJeffersonOffutt> <https://dblp.org/rdf/schema#wikidata> ?answer }" }
21	Q0003	SINGLE_FACT	 "What is the webpage of the person Mohammad Soleymani?" 	dEntities=[ DEntity(X2, webpage, webpage, NOUN, the, 4, null),  DEntity(X3, person, person, NOUN, the, 7, null)],  dConditions=[ DCondition(X2, has_text, webpage, propriedades= [] --- []),  DCondition(X3, has_text, person, propriedades= [] --- []),  DCondition(X3, has_name, Mohammad Soleymani, propriedades= [] --- []),  DCondition(X2, what, true, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, webpage, webpage, NOUN, the, null, ConceptPerson),  DEntity(X2, person, person, NOUN, the, null, Person),  DEntity(X3, null, null, null, null, null, Query),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, webpage, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, has_text, person, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Mohammad Soleymani, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X1, of, X2, propriedades= [conc_of_Person] --- []),  DCondition(X3, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [select] --- []),  DCondition(X3, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 12  numEntitiesNOk = 0  numClassesOk = 1]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Mohammad Soleymani","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"webpage","i")). }	4	TC05	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/s/MohammadSoleymani> <https://dblp.org/rdf/schema#webpage> ?answer }" }
22	Q0011	SINGLE_FACT	 "What is the webpage of the author Peter W. Glynn?" 	dEntities=[ DEntity(X2, webpage, webpage, NOUN, the, 4, null),  DEntity(X3, author, author, NOUN, the, 7, null)],  dConditions=[ DCondition(X2, has_text, webpage, propriedades= [] --- []),  DCondition(X3, has_text, author, propriedades= [] --- []),  DCondition(X3, has_name, Peter Glynn W., propriedades= [] --- []),  DCondition(X2, what, true, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, webpage, webpage, NOUN, the, null, ConceptPerson),  DEntity(X2, author, author, NOUN, the, null, Person),  DEntity(X3, null, null, null, null, null, Query),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, webpage, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Peter Glynn W., propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X1, of, X2, propriedades= [conc_of_Person] --- []),  DCondition(X3, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [select] --- []),  DCondition(X3, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 12  numEntitiesNOk = 0  numClassesOk = 2]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Peter Glynn W.","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"webpage","i")). }	4	TC05	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/g/PeterWGlynn> <https://dblp.org/rdf/schema#webpage> ?answer }" }
23	Q0036	SINGLE_FACT	 "What is the webpage of the author Wang, Chao?" 	dEntities=[ DEntity(X2, webpage, webpage, NOUN, the, 4, null),  DEntity(X3, author, author, NOUN, the, 7, null)],  dConditions=[ DCondition(X2, has_text, webpage, propriedades= [] --- []),  DCondition(X3, has_text, author, propriedades= [] --- []),  DCondition(X3, has_name, Chao Wang, propriedades= [] --- []),  DCondition(X2, what, true, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- [])]  numEntitiesOk = 0   numPropsOk = 0  numEntitiesNOk = 0  numClassesOk = 0]	dEntities=[ DEntity(X1, webpage, webpage, NOUN, the, null, ConceptPerson),  DEntity(X2, author, author, NOUN, the, null, Person),  DEntity(X3, null, null, null, null, null, Query),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, webpage, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Chao Wang, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X1, of, X2, propriedades= [conc_of_Person] --- []),  DCondition(X3, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [select] --- []),  DCondition(X3, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 12  numEntitiesNOk = 0  numClassesOk = 2]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Chao Wang","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"webpage","i")). }	4	TC05	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/w/ChaoWang> <https://dblp.org/rdf/schema#webpage> ?answer }" }
24	Q0046	SINGLE_FACT	 "What is the webpage of the author Christian Wagner?" 	dEntities=[ DEntity(X2, webpage, webpage, NOUN, the, 4, null),  DEntity(X3, author, author, NOUN, the, 7, null)],  dConditions=[ DCondition(X2, has_text, webpage, propriedades= [] --- []),  DCondition(X3, has_text, author, propriedades= [] --- []),  DCondition(X3, has_name, Christian Wagner, propriedades= [] --- []),  DCondition(X2, what, true, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, webpage, webpage, NOUN, the, null, ConceptPerson),  DEntity(X2, author, author, NOUN, the, null, Person),  DEntity(X3, null, null, null, null, null, Query),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, webpage, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Christian Wagner, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X1, of, X2, propriedades= [conc_of_Person] --- []),  DCondition(X3, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [select] --- []),  DCondition(X3, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 12  numEntitiesNOk = 0  numClassesOk = 2]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Christian Wagner","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"webpage","i")). }	4	TC05	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/01/2903-1> <https://dblp.org/rdf/schema#webpage> ?answer }" }
25	Q0072	SINGLE_FACT	 "What is the webpage of the person Fardoun, Habib?" 	dEntities=[ DEntity(X1, webpage, webpage, NOUN, the, 4, null),  DEntity(X2, person, person, NOUN, the, 7, null)],  dConditions=[ DCondition(X1, has_text, webpage, propriedades= [] --- []),  DCondition(X2, has_text, person, propriedades= [] --- []),  DCondition(X2, has_name, Fardoun, propriedades= [] --- []),  DCondition(X2, has_name, Habib, propriedades= [] --- []),  DCondition(X1, what, true, propriedades= [] --- []),  DCondition(X1, of, X2, propriedades= [] --- [])]	dEntities=[ DEntity(X1, webpage, webpage, NOUN, the, null, ConceptPerson),  DEntity(X2, person, person, NOUN, the, null, Person),  DEntity(X3, null, null, null, null, null, Query),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, webpage, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, has_text, person, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Fardoun, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Habib, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X1, of, X2, propriedades= [conc_of_Person] --- []),  DCondition(X3, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [select] --- []),  DCondition(X3, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 12  numEntitiesNOk = 0  numClassesOk = 2]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Fardoun","i")). filter (regex(?personName1,"Habib","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"webpage","i")). }	4	TC05	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/24/7186> <https://dblp.org/rdf/schema#webpage> ?answer }" }
26	Q0102	MULTI_FACT	 "What are the venues in which Ke Wang published?" 	dEntities=[ DEntity(X1, venue, venues, NOUN, the, 4, null),  DEntity(X2, Ke Wang, Ke, PROPN, null, 7, null),  DEntity(X3, publish, published, VERB, null, 9, null)],  dConditions=[ DCondition(X1, has_text, venue, propriedades= [] --- []),  DCondition(X2, has_text, which, propriedades= [] --- []),  DCondition(X2, has_name, Ke Wang, propriedades= [] --- []),  DCondition(X3, has_text, publish, propriedades= [] --- []),  DCondition(X1, what, true, propriedades= [] --- []),  DCondition(X3, subj, X2, propriedades= [] --- []),  DCondition(X3, obl_in, X1, propriedades= [] --- [])]	dEntities=[ DEntity(X1, venue, venues, NOUN, the, null, ConceptDocument),  DEntity(X2, Ke Wang, Ke, PROPN, null, null, Person),  DEntity(X3, publish, published, VERB, null, null, Create),  DEntity(X4, null, null, null, null, null, Query),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, venue, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Ke Wang, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, subj, X2, propriedades= [who_create] --- []),  DCondition(X3, obl_in, X1, propriedades= [create_in] --- []),  DCondition(X4, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X1, propriedades= [select] --- []),  DCondition(X4, subj, X5, propriedades= [qQualifier] --- [])]	SELECT ?conceptDocument1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Ke Wang","i")). ?document1 dblp:authoredBy ?person1 . ?document1 ?prop1 ?conceptDocument1 . filter (regex(?prop,"publish","i")). } 	4	TC11	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?x <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/w/KeWang> . ?x <https://dblp.org/rdf/schema#publishedIn> ?answer }" }
27	Q0105	MULTI_FACT	 "Which venues has Amit P. published in?" 	DEntity(X1, venue, venues, NOUN, which, 2, null),  DEntity(X2, Amit P., Amit, PROPN, null, 4, null),  DEntity(X3, publish, published, VERB, null, 6, null)],  dConditions=[ DCondition(X1, has_text, venue, propriedades= [] --- []),  DCondition(X2, has_name, Amit P., propriedades= [] --- []),  DCondition(X3, has_text, publish, propriedades= [] --- []),  DCondition(X3, obl_in, X1, propriedades= [] --- []),  DCondition(X3, nsubj, X2, propriedades= [] --- [])]	dEntities=[ DEntity(X1, venue, venues, NOUN, which, null, ConceptDocument),  DEntity(X2, Amit P., Amit, PROPN, null, null, Person),  DEntity(X3, publish, published, VERB, null, null, Create),  DEntity(X4, null, null, null, null, null, Query),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, venue, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Amit P., propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obl_in, X1, propriedades= [create_in] --- []),  DCondition(X3, nsubj, X2, propriedades= [who_create] --- []),  DCondition(X4, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X1, propriedades= [select] --- []),  DCondition(X4, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 16  numEntitiesNOk = 0  numClassesOk = 2 	SELECT ?conceptDocument1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Amit P","i")). ?document1 dblp:authoredBy ?person1 . ?document1 ?prop1 ?conceptDocument1 . filter (regex(?prop,"publish","i")). } 	4	TC11	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?x <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/230/9003> . ?x <https://dblp.org/rdf/schema#publishedIn> ?answer }" }
28	Q0117	MULTI_FACT	 "Mention the venues in which G. Leduc published." 	dEntities=[ DEntity(X1, mention, Mention, VERB, null, 1, null),  DEntity(X2, venue, venues, NOUN, the, 3, null),  DEntity(X3, G. Leduc, G., PROPN, null, 6, null),  DEntity(X4, publish, published, VERB, null, 8, null)],  dConditions=[ DCondition(X1, has_text, mention, propriedades= [] --- []),  DCondition(X2, has_text, venue, propriedades= [] --- []),  DCondition(X3, has_text, which, propriedades= [] --- []),  DCondition(X3, has_name, G. Leduc, propriedades= [] --- []),  DCondition(X4, has_text, publish, propriedades= [] --- []),  DCondition(X1, obj, X2, propriedades= [] --- []),  DCondition(X4, subj, X3, propriedades= [] --- []),  DCondition(X4, obl_in, X2, propriedades= [] --- [])]	dEntities=[ DEntity(X1, mention, Mention, VERB, null, null, Query),  DEntity(X2, venue, venues, NOUN, the, null, ConceptDocument),  DEntity(X3, G. Leduc, G., PROPN, null, null, Person),  DEntity(X4, publish, published, VERB, null, null, Create),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, mention, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, venue, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, G. Leduc, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, obj, X2, propriedades= [select] --- []),  DCondition(X4, subj, X3, propriedades= [who_create] --- []),  DCondition(X4, obl_in, X2, propriedades= [create_in] --- []),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, null, propriedades= [] --- []),  DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]	SELECT ?conceptDocument1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"G. Leduc","i")). ?document1 dblp:authoredBy ?person1 . ?document1 ?prop1 ?conceptDocument1 . filter (regex(?prop,"publish","i")). } 	4	TC11	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?x <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/61/1225> . ?x <https://dblp.org/rdf/schema#publishedIn> ?answer }" }
29	Q0145	MULTI_FACT	 "List the venues in which David Doukhan published." 	dEntities=[ DEntity(X1, list, List, VERB, null, 1, null),  DEntity(X2, venue, venues, NOUN, the, 3, null),  DEntity(X3, David Doukhan, David, PROPN, null, 6, null),  DEntity(X4, publish, published, VERB, null, 8, null)],  dConditions=[ DCondition(X1, has_text, list, propriedades= [] --- []),  DCondition(X2, has_text, venue, propriedades= [] --- []),  DCondition(X3, has_text, which, propriedades= [] --- []),  DCondition(X3, has_name, David Doukhan, propriedades= [] --- []),  DCondition(X4, has_text, publish, propriedades= [] --- []),  DCondition(X1, obj, X2, propriedades= [] --- []),  DCondition(X4, subj, X3, propriedades= [] --- []),  DCondition(X4, obl_in, X2, propriedades= [] --- [])]	dEntities=[ DEntity(X1, list, List, VERB, null, null, Query),  DEntity(X2, venue, venues, NOUN, the, null, ConceptDocument),  DEntity(X3, David Doukhan, David, PROPN, null, null, Person),  DEntity(X4, publish, published, VERB, null, null, Create),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, list, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, venue, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, David Doukhan, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, obj, X2, propriedades= [select] --- []),  DCondition(X4, subj, X3, propriedades= [who_create] --- []),  DCondition(X4, obl_in, X2, propriedades= [create_in] --- []),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, null, propriedades= [] --- []),  DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 12  numEntitiesNOk = 0  numClassesOk = 3]	SELECT ?conceptDocument1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"David Doukhan","i")). ?document1 dblp:authoredBy ?person1 . ?document1 ?prop1 ?conceptDocument1 . filter (regex(?prop,"publish","i")). } 	4	TC11	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?x <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/35/10650> . ?x <https://dblp.org/rdf/schema#publishedIn> ?answer }" }
30	Q0127	MULTI_FACT	 "Which papers did the authors Frederic T. Chong and Susmit Biswas co-write?" 	dEntities=[ DEntity(X1, paper, papers, NOUN, which, 2, null),  DEntity(X2, author, authors, NOUN, the, 5, null),  DEntity(X3, Susmit Biswas, Susmit, PROPN, null, 10, null),  DEntity(X4, co-write, co-write, VERB, null, 12, null)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- []),  DCondition(X2, has_text, author, propriedades= [] --- []),  DCondition(X2, has_name, Frederic T. Chong, propriedades= [] --- []),  DCondition(X3, has_name, Susmit Biswas, propriedades= [] --- []),  DCondition(X4, has_text, co-write, propriedades= [] --- []),  DCondition(X4, obj, X1, propriedades= [] --- []),  DCondition(X4, subj, X2, propriedades= [] --- []),  DCondition(X4, subj, X3, propriedades= [] --- [])]	tokens=[],  dEntities=[ DEntity(X1, paper, papers, NOUN, which, null, Document),  DEntity(X2, author, authors, NOUN, the, null, Person),  DEntity(X3, Susmit Biswas, Susmit, PROPN, null, null, Person),  DEntity(X4, co-write, co-write, VERB, null, null, Create),  DEntity(X5, null, null, null, null, null, Query),  DEntity(X6, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Frederic T. Chong, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, Susmit Biswas, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, co-write, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X1, propriedades= [create_what] --- []),  DCondition(X4, subj, X2, propriedades= [who_create] --- []),  DCondition(X4, subj, X3, propriedades= [who_create] --- []),  DCondition(X5, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, obj, X1, propriedades= [select] --- []),  DCondition(X5, subj, X6, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 20  numEntitiesNOk = 0  numClassesOk = 3]	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Frederic T. Chong”,"i")). ?person2 dblp:creatorName ?personName2 . filter (regex(?personName1,"Susmit Biswas","i")). ?document1 dblp:authoredBy ?person1 . ?document1 dblp:authoredBy ?person2 . } 	4	TC12	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/c/FTChong> . ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/33/6598> }" }
31	Q0136	MULTI_FACT	"Which papers did the authors C. Raymundo Ibañez and D. Vásquez Zúñiga co-write?" 	dEntities=[ DEntity(X1, paper, papers, NOUN, which, 2, null),  DEntity(X2, author, authors, NOUN, the, 5, null),  DEntity(X4, D. Vásquez Zúñiga, D., PROPN, null, 10, null),  DEntity(X5, co-write, co-write, VERB, null, 13, null)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- []),  DCondition(X2, has_text, author, propriedades= [] --- []),  DCondition(X2, has_name, C. Raymundo Ibañez, propriedades= [] --- []),  DCondition(X4, has_name, D. Vásquez Zúñiga, propriedades= [] --- []),  DCondition(X5, has_text, co-write, propriedades= [] --- []),  DCondition(X5, obj, X1, propriedades= [] --- []),  DCondition(X5, subj, X2, propriedades= [] --- []),  DCondition(X5, subj, X4, propriedades= [] --- [])]	dEntities=[ DEntity(X1, paper, papers, NOUN, which, null, Document),  DEntity(X2, author, authors, NOUN, the, null, Person),  DEntity(X3, D. Vásquez Zúñiga, D., PROPN, null, null, Person),  DEntity(X4, co-write, co-write, VERB, null, null, Create),  DEntity(X5, null, null, null, null, null, Query),  DEntity(X6, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, C. Raymundo Ibañez, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, D. Vásquez Zúñiga, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, write, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X1, propriedades= [create_what] --- []),  DCondition(X4, subj, X2, propriedades= [who_create] --- []),  DCondition(X4, subj, X3, propriedades= [who_create] --- []),  DCondition(X5, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, obj, X1, propriedades= [select] --- []),  DCondition(X5, subj, X6, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 20  numEntitiesNOk = 0  numClassesOk = 3]	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"C. Raymundo Ibañez”,"i")). ?person2 dblp:creatorName ?personName2 . filter (regex(?personName1,"D. Vásquez Zúñiga","i")). ?document1 dblp:authoredBy ?person1 . ?document1 dblp:authoredBy ?person2 . } 	4	TC12	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/150/7836> . ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/270/7018> }" }
32	Q0115	MULTI_FACT	"What are the publications written by the authors J. Rowland and Adrian Freed in collaboration?"	dEntities=[ DEntity(X2, publication, publications, NOUN, the, 4, null),  DEntity(X3, write, written, VERB, null, 5, null),  DEntity(X4, author, authors, NOUN, the, 8, null),  DEntity(X6, Adrian Freed, Adrian, PROPN, null, 12, null),  DEntity(X7, collaboration, collaboration, NOUN, null, 15, null)],  dConditions=[ DCondition(X2, has_text, publication, propriedades= [] --- []),  DCondition(X3, has_text, write, propriedades= [] --- []),  DCondition(X4, has_text, author, propriedades= [] --- []),  DCondition(X4, has_name, J. Rowland, propriedades= [] --- []),  DCondition(X6, has_name, Adrian Freed, propriedades= [] --- []),  DCondition(X7, has_text, collaboration, propriedades= [] --- []),  DCondition(X2, what, true, propriedades= [] --- []),  DCondition(X3, nsubj:pass, X2, propriedades= [] --- []),  DCondition(X3, obl_by, X4, propriedades= [] --- []),  DCondition(X3, obl_by, X6, propriedades= [] --- []),  DCondition(X3, obl_in, X7, propriedades= [] --- [])]	dEntities=[ DEntity(X1, publication, publications, NOUN, the, null, Document),  DEntity(X2, write, written, VERB, null, null, Create),  DEntity(X3, author, authors, NOUN, the, null, Person),  DEntity(X4, Adrian Freed, Adrian, PROPN, null, null, Person),  DEntity(X5, collaboration, collaboration, NOUN, null, null, ConceptDocument),  DEntity(X6, null, null, null, null, null, Query),  DEntity(X7, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, publication, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, write, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, J. Rowland, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, Adrian Freed, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, collaboration, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, nsubj:pass, X1, propriedades= [create_what] --- []),  DCondition(X2, obl_by, X3, propriedades= [who_create] --- []),  DCondition(X2, obl_by, X4, propriedades= [who_create] --- []),  DCondition(X2, obl_in, X5, propriedades= [create_in] --- []),  DCondition(X6, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X7, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X7, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, obj, X1, propriedades= [select] --- []),  DCondition(X6, subj, X7, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 24  numEntitiesNOk = 0  numClassesOk = 2]]	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"J. Rowland”,"i")). ?person2 dblp:creatorName ?personName2 . filter (regex(?personName1,"Adrian Freed","i")). ?document1 dblp:authoredBy ?person1 . ?document1 dblp:authoredBy ?person2 . } 	4	TC12	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/121/4922> . ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/88/2117> }" }
33	Q0108	MULTI_FACT	 "In AGIT Journal, which papers did the author Ralf Bill publish?" 	DEntity(X1, AGIT Journal, Journal, PROPN, null, 3, null),  DEntity(X2, paper, papers, NOUN, which, 6, null),  DEntity(X3, author, author, NOUN, the, 9, null),  DEntity(X6, publish, publish, VERB, null, 12, null)],  dConditions=[ DCondition(X1, has_name, AGIT Journal, propriedades= [] --- []),  DCondition(X2, has_text, paper, propriedades= [] --- []),  DCondition(X3, has_text, author, propriedades= [] --- []),  DCondition(X3, has_name, Ralf, propriedades= [] --- []),  DCondition(X3, has_name, Bill, propriedades= [] --- []),  DCondition(X6, has_text, publish, propriedades= [] --- []),  DCondition(X6, obl_in, X1, propriedades= [] --- []),  DCondition(X6, obj, X2, propriedades= [] --- []),  DCondition(X6, subj, X3, propriedades= [] --- [])]	DEntity(X1, AGIT Journal, Journal, PROPN, null, null, ConceptDocument),  DEntity(X2, paper, papers, NOUN, which, null, Document),  DEntity(X3, author, author, NOUN, the, null, Person),  DEntity(X4, publish, publish, VERB, null, null, Create),  DEntity(X5, null, null, null, null, null, Query),  DEntity(X6, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_name, AGIT Journal, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, Ralf, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, Bill, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obl_in, X1, propriedades= [create_in] --- []),  DCondition(X4, obj, X2, propriedades= [create_what] --- []),  DCondition(X4, subj, X3, propriedades= [who_create] --- []),  DCondition(X5, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, obj, X2, propriedades= [select] --- []),  DCondition(X5, subj, X6, propriedades= [qQualifier] --- [])]	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Ralf","i")). filter (regex(?personName1,"Bill","i")). ?document1 dblp:authoredBy ?person1 . ?document1 ?prop1 ?conceptDocument1 . filter (regex(?prop,"publish","i")). filter (regex(?conceptDocument1,"AGIT Journal","i")).  } 	4	TC13	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/99/3431> . ?answer <https://dblp.org/rdf/schema#publishedIn> 'AGIT Journal' }" }
34	Q0116	MULTI_FACT	 "In Int. J. Robotics Autom., which papers did the author Kin Hong Wong publish?" 	DEntity(X1, Robotics J. Int. Autom., Autom., PROPN, null, 5, null),  DEntity(X2, which, which, PRON, null, 7, null),  DEntity(X3, paper, papers, NOUN, which, 8, null),  DEntity(X4, author, author, NOUN, the, 11, null),  DEntity(X6, publish, publish, VERB, null, 15, null)],  dConditions=[ DCondition(X1, has_name, Robotics J. Int. Autom., propriedades= [] --- []),  DCondition(X2, has_text, which, propriedades= [] --- []),  DCondition(X3, has_text, paper, propriedades= [] --- []),  DCondition(X4, has_text, author, propriedades= [] --- []),  DCondition(X4, has_name, Kin Hong Wong, propriedades= [] --- []),  DCondition(X6, has_text, publish, propriedades= [] --- []),  DCondition(X6, obl_in, X1, propriedades= [] --- []),  DCondition(X6, obj, X3, propriedades= [] --- []),  DCondition(X6, subj, X4, propriedades= [] --- [])]	dEntities=[ DEntity(X1, Robotics J. Int. Autom., Autom., PROPN, null, null, ConceptDocument),  DEntity(X2, which, which, PRON, null, null, Qualifier),  DEntity(X3, paper, papers, NOUN, which, null, Document),  DEntity(X4, author, author, NOUN, the, null, Person),  DEntity(X5, publish, publish, VERB, null, null, Create),  DEntity(X6, null, null, null, null, null, Query)],  dConditions=[ DCondition(X1, has_name, Robotics J. Int. Autom., propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, Kin Hong Wong, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, obl_in, X1, propriedades= [create_in] --- []),  DCondition(X5, obj, X3, propriedades= [create_what] --- []),  DCondition(X5, subj, X4, propriedades= [who_create] --- []),  DCondition(X6, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, obj, X3, propriedades= [select] --- []),  DCondition(X6, subj, X2, propriedades= [qQualifier] --- [])]  numEntitiesOk = 11   numPropsOk = 20  numEntitiesNOk = 0  numClassesOk = 4]	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Kin Hong Wong","i")). ?document1 dblp:authoredBy ?person1 . ?document1 ?prop1 ?conceptDocument1 . filter (regex(?prop,"publish","i")). filter (regex(?conceptDocument1,"Robotics J. Int. Autom.","i")).  } 	4	TC13	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/11/2362> . ?answer <https://dblp.org/rdf/schema#publishedIn> 'Int. J. Robotics Autom.' }" }
35	Q0132	MULTI_FACT	 "Which papers did C. F. Broomfield publish in Comput. Commun. Rev.?" 	dEntities=[ DEntity(X1, paper, papers, NOUN, which, 2, null),  DEntity(X2, C. F. Broomfield, C., PROPN, null, 4, null),  DEntity(X3, publish, publish, VERB, null, 7, null),  DEntity(X4, Comput. Commun. Rev., Comput, PROPN, null, 9, null)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- []),  DCondition(X2, has_name, C. F. Broomfield, propriedades= [] --- []),  DCondition(X3, has_text, publish, propriedades= [] --- []),  DCondition(X4, has_name, Comput. Commun. Rev., propriedades= [] --- []),  DCondition(X3, obj, X1, propriedades= [] --- []),  DCondition(X3, subj, X2, propriedades= [] --- []),  DCondition(X3, obl_in, X4, propriedades= [] --- [])]	dEntities=[ DEntity(X1, paper, papers, NOUN, which, null, Document),  DEntity(X2, C. F. Broomfield, C., PROPN, null, null, Person),  DEntity(X3, publish, publish, VERB, null, null, Create),  DEntity(X4, Comput. Commun. Rev., Comput, PROPN, null, null, ConceptDocument),  DEntity(X5, null, null, null, null, null, Query),  DEntity(X6, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, C. F. Broomfield, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, Comput. Commun. Rev., propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [create_what] --- []),  DCondition(X3, subj, X2, propriedades= [who_create] --- []),  DCondition(X3, obl_in, X4, propriedades= [create_in] --- []),  DCondition(X5, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, obj, X1, propriedades= [select] --- []),  DCondition(X5, subj, X6, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 20  numEntitiesNOk = 0  numClassesOk = 2]]	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"C. F. Broomfield","i")). ?document1 dblp:authoredBy ?person1 . ?document1 ?prop1 ?conceptDocument1 . filter (regex(?prop,"publish","i")). filter (regex(?conceptDocument1,"Comput. Commun. Rev.","i")). } 	4	TC13	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/297/5335> . ?answer <https://dblp.org/rdf/schema#publishedIn> 'Comput. Commun. Rev.' }" }
36	Q0104	MULTI_FACT	 "Who are the co-authors of Shalini Chandra?" 	dEntities=[ DEntity(X1, co-author, co-authors, NOUN, the, 4, null),  DEntity(X2, Shalini Chandra, Shalini, PROPN, null, 6, null)],  dConditions=[ DCondition(X1, has_text, co-author, propriedades= [] --- []),  DCondition(X2, has_name, Shalini Chandra, propriedades= [] --- []),  DCondition(X1, who, true, propriedades= [] --- []),  DCondition(X1, of, X2, propriedades= [] --- [])]  numEntitiesOk = 0   numPropsOk = 0  numEntitiesNOk = 0  numClassesOk = 0]	dEntities=[ DEntity(X1, co-author, co-authors, NOUN, the, null, Create),  DEntity(X2, Shalini Chandra, Shalini, PROPN, null, null, Person),  DEntity(X3, null, null, null, null, null, Query),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, co-author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Shalini Chandra, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, who, true, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, of, X2, propriedades= [who_create] --- []),  DCondition(X3, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [select] --- []),  DCondition(X3, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 8  numEntitiesNOk = 0  numClassesOk = 1]]	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Shalini Chandra”,"i")). ?document1 dblp:authoredBy ?person1 . ?document1 dblp:authoredBy> ?answer . filter(?answer != ?person1) } 	4	TC14	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?x <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/72/7554> . ?x <https://dblp.org/rdf/schema#authoredBy> ?answer FILTER(?answer != <https://dblp.org/pid/72/7554>) }" }
37	Q0106	MULTI_FACT	 "Mention the co-authors of A. P. Felty." 	dEntities=[ DEntity(X1, mention, Mention, VERB, null, 1, null),  DEntity(X2, co-author, co-authors, NOUN, the, 3, null),  DEntity(X3, A. P. Felty, A., PROPN, null, 5, null)],  dConditions=[ DCondition(X1, has_text, mention, propriedades= [] --- []),  DCondition(X2, has_text, co-author, propriedades= [] --- []),  DCondition(X3, has_name, A. P. Felty, propriedades= [] --- []),  DCondition(X1, obj, X2, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, mention, Mention, VERB, null, null, Query),  DEntity(X2, author, authors, NOUN, the, null, Create),  DEntity(X3, A. P. Felty, A., PROPN, null, null, Person),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, mention, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, A. P. Felty, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, obj, X2, propriedades= [select] --- []),  DCondition(X2, of, X3, propriedades= [who_create] --- []),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, null, propriedades= [] --- []),  DCondition(X1, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 4  numEntitiesNOk = 0  numClassesOk = 2]]	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"A. P. Felty”,"i")). ?document1 dblp:authoredBy ?person1 . ?document1 dblp:authoredBy> ?answer . filter(?answer != ?person1) } 	4	TC14	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?x <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/f/AmyPFelty> . ?x <https://dblp.org/rdf/schema#authoredBy> ?answer FILTER(?answer != <https://dblp.org/pid/f/AmyPFelty>) }" }
38	Q0113	MULTI_FACT	 "With which other authors has Thevenaz, L. written papers?" 	n.a.	n.a.	n.a.	0	TC14	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?x <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/265/7061> . ?x <https://dblp.org/rdf/schema#authoredBy> ?answer FILTER(?answer != <https://dblp.org/pid/265/7061>) }" }
39	Q0143	MULTI_FACT	 "List the co-authors of Xueming Li." 	DEntity(X1, list, List, VERB, null, 1, null),  DEntity(X2, co-author, co-authors, NOUN, the, 3, null),  DEntity(X3, Xueming Li, Xueming, PROPN, null, 5, null)],  dConditions=[ DCondition(X1, has_text, list, propriedades= [] --- []),  DCondition(X2, has_text, co-author, propriedades= [] --- []),  DCondition(X3, has_name, Xueming Li, propriedades= [] --- []),  DCondition(X1, obj, X2, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, list, List, VERB, null, null, Query),  DEntity(X2, co-author, co-authors, NOUN, the, null, Create),  DEntity(X3, Xueming Li, Xueming, PROPN, null, null, Person),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, list, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, co-author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, Xueming Li, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, obj, X2, propriedades= [select] --- []),  DCondition(X2, of, X3, propriedades= [who_create] --- []),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, null, propriedades= [] --- []),  DCondition(X1, subj, X4, propriedades= [qQualifier] --- [])]	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Xueming Li”,"i")). ?document1 dblp:authoredBy ?person1 . ?document1 dblp:authoredBy> ?answer . filter(?answer != ?person1) } 	4	TC14	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?x <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/67/2097> . ?x <https://dblp.org/rdf/schema#authoredBy> ?answer FILTER(?answer != <https://dblp.org/pid/67/2097>) }" }
40	Q0107	MULTI_FACT	 "Which papers did Ji, Shaoxiong publish in the last 8 years?" 	dEntities=[ DEntity(X1, paper, papers, NOUN, which, 2, null),  DEntity(X2, Shaoxiong Ji, Ji, PROPN, null, 4, null),  DEntity(X3, publish, publish, VERB, null, 7, null),  DEntity(X4, year, years, NOUN, the, 12, null)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- []),  DCondition(X2, has_name, Shaoxiong Ji, propriedades= [] --- []),  DCondition(X3, has_text, publish, propriedades= [] --- []),  DCondition(X4, has_text, year, propriedades= [] --- []),  DCondition(X3, obj, X1, propriedades= [] --- []),  DCondition(X3, subj, X2, propriedades= [] --- []),  DCondition(X4, mod, last, propriedades= [] --- []),  DCondition(X4, number, 8, propriedades= [] --- []),  DCondition(X3, obl_in, X4, propriedades= [] --- [])]	dEntities=[ DEntity(X1, paper, papers, NOUN, which, null, Document),  DEntity(X2, Shaoxiong Ji, Ji, PROPN, null, null, Person),  DEntity(X3, publish, publish, VERB, null, null, Create),  DEntity(X4, year, years, NOUN, the, null, Date),  DEntity(X5, null, null, null, null, null, Query),  DEntity(X6, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Shaoxiong Ji, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, year, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [create_what] --- []),  DCondition(X3, subj, X2, propriedades= [who_create] --- []),  DCondition(X4, mod, last, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, number, 8, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obl_in, X4, propriedades= [action_date] --- []),  DCondition(X5, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, obj, X1, propriedades= [select] --- []),  DCondition(X5, subj, X6, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 20  numEntitiesNOk = 0  numClassesOk = 3]	SELECT  ?document WHERE {  ?document dblp:authoredBy ?creator .  ?creator dblp:creatorName ?creatorName . filter (regex(?creatorName,"Shaoxiong Ji","i")). ?document dblp:yearOfPublication ?year. filter (?year > year(now()) -8).  } 	4	TC15	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/227/0291> . ?answer <https://dblp.org/rdf/schema#yearOfPublication> ?y FILTER(?y > YEAR(NOW())-8) }" }
41	Q0139	MULTI_FACT	 "List the papers published by Huang, C. in the last 8 years." 	dEntities=[ DEntity(X1, list, List, VERB, null, 1, null),  DEntity(X2, paper, papers, NOUN, the, 3, null),  DEntity(X3, publish, published, VERB, null, 4, null),  DEntity(X4, C. Huang, Huang, PROPN, null, 6, null),  DEntity(X5, year, years, NOUN, the, 13, null)],  dConditions=[ DCondition(X1, has_text, list, propriedades= [] --- []),  DCondition(X2, has_text, paper, propriedades= [] --- []),  DCondition(X3, has_text, publish, propriedades= [] --- []),  DCondition(X4, has_name, C. Huang, propriedades= [] --- []),  DCondition(X5, has_text, year, propriedades= [] --- []),  DCondition(X1, obj, X2, propriedades= [] --- []),  DCondition(X3, nsubj:pass, X2, propriedades= [] --- []),  DCondition(X3, obl_by, X4, propriedades= [] --- []),  DCondition(X5, mod, last, propriedades= [] --- []),  DCondition(X5, number, 8, propriedades= [] --- []),  DCondition(X3, obl_in, X5, propriedades= [] --- [])] 	dEntities=[ DEntity(X1, list, List, VERB, null, null, Query),  DEntity(X2, paper, papers, NOUN, the, null, Document),  DEntity(X3, publish, published, VERB, null, null, Create),  DEntity(X4, C. Huang, Huang, PROPN, null, null, Person),  DEntity(X5, year, years, NOUN, the, null, Date),  DEntity(X6, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, list, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, C. Huang, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, year, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, obj, X2, propriedades= [aggregate, select] --- []),  DCondition(X3, nsubj:pass, X2, propriedades= [create_what] --- []),  DCondition(X3, obl_by, X4, propriedades= [who_create] --- []),  DCondition(X5, mod, last, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, number, 8, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obl_in, X5, propriedades= [action_date, action_date_before, action_between, action_date_after] --- []),  DCondition(X6, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_name, null, propriedades= [] --- []),  DCondition(X1, subj, X6, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 16  numEntitiesNOk = 0  numClassesOk = 4]	SELECT  ?document WHERE {  ?document dblp:authoredBy ?creator .  ?creator dblp:creatorName ?creatorName . filter (regex(?creatorName,"C. Huang","i")). ?document dblp:yearOfPublication ?year. filter (?year > year(now()) -8).  } 	4	TC15	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/75/2652> . ?answer <https://dblp.org/rdf/schema#yearOfPublication> ?y FILTER(?y > YEAR(NOW())-8) }" }
42	Q0141	MULTI_FACT	 "List the papers published by Mohsen Vatani in the last three years." 	dEntities=[ DEntity(X1, list, List, VERB, null, 1, null),  DEntity(X2, paper, papers, NOUN, the, 3, null),  DEntity(X3, publish, published, VERB, null, 4, null),  DEntity(X4, Mohsen Vatani, Mohsen, PROPN, null, 6, null),  DEntity(X5, year, years, NOUN, the, 12, null)],  dConditions=[ DCondition(X1, has_text, list, propriedades= [] --- []),  DCondition(X2, has_text, paper, propriedades= [] --- []),  DCondition(X3, has_text, publish, propriedades= [] --- []),  DCondition(X4, has_name, Mohsen Vatani, propriedades= [] --- []),  DCondition(X5, has_text, year, propriedades= [] --- []),  DCondition(X1, obj, X2, propriedades= [] --- []),  DCondition(X3, nsubj:pass, X2, propriedades= [] --- []),  DCondition(X3, obl_by, X4, propriedades= [] --- []),  DCondition(X5, mod, last, propriedades= [] --- []),  DCondition(X5, number, three, propriedades= [] --- []),  DCondition(X3, obl_in, X5, propriedades= [] --- [])]  numEntitiesOk = 0   numPropsOk = 0  numEntitiesNOk = 0  numClassesOk = 0]	dEntities=[ DEntity(X1, list, List, VERB, null, null, Query),  DEntity(X2, paper, papers, NOUN, the, null, Document),  DEntity(X3, publish, published, VERB, null, null, Create),  DEntity(X4, Mohsen Vatani, Mohsen, PROPN, null, null, Person),  DEntity(X5, year, years, NOUN, the, null, Date),  DEntity(X6, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, list, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, Mohsen Vatani, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, year, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, obj, X2, propriedades= [aggregate, select] --- []),  DCondition(X3, nsubj:pass, X2, propriedades= [create_what] --- []),  DCondition(X3, obl_by, X4, propriedades= [who_create] --- []),  DCondition(X5, mod, last, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, number, three, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obl_in, X5, propriedades= [action_date, action_date_before, action_between, action_date_after] --- []),  DCondition(X6, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_name, null, propriedades= [] --- []),  DCondition(X1, subj, X6, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 16  numEntitiesNOk = 0  numClassesOk = 4]	SELECT  ?document WHERE {  ?document dblp:authoredBy ?creator .  ?creator dblp:creatorName ?creatorName . filter (regex(?creatorName,"Mohsen Vatani","i")). ?document dblp:yearOfPublication ?year. filter (?year > year(now()) -3). } 	4	TC15	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/158/4992> . ?answer <https://dblp.org/rdf/schema#yearOfPublication> ?y FILTER(?y > YEAR(NOW())-3) }" }
43	Q0142	MULTI_FACT	 "Which papers did the author Yang, Meng publish in the last four years?" 	dEntities=[ DEntity(X1, paper, papers, NOUN, which, 2, null),  DEntity(X2, author, author, NOUN, the, 5, null),  DEntity(X3, publish, publish, VERB, null, 9, null),  DEntity(X4, year, years, NOUN, the, 14, null)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- []),  DCondition(X2, has_text, author, propriedades= [] --- []),  DCondition(X2, has_name, Yang, propriedades= [] --- []),  DCondition(X2, has_name, Meng, propriedades= [] --- []),  DCondition(X3, has_text, publish, propriedades= [] --- []),  DCondition(X4, has_text, year, propriedades= [] --- []),  DCondition(X3, obj, X1, propriedades= [] --- []),  DCondition(X3, subj, X2, propriedades= [] --- []),  DCondition(X4, mod, last, propriedades= [] --- []),  DCondition(X4, number, four, propriedades= [] --- []),  DCondition(X3, obl_in, X4, propriedades= [] --- [])]  	dEntities=[ DEntity(X1, paper, papers, NOUN, which, null, Document),  DEntity(X2, author, author, NOUN, the, null, Person),  DEntity(X3, publish, publish, VERB, null, null, Create),  DEntity(X4, year, years, NOUN, the, null, Date),  DEntity(X5, null, null, null, null, null, Query),  DEntity(X6, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Yang, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Meng, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, year, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [create_what] --- []),  DCondition(X3, subj, X2, propriedades= [who_create] --- []),  DCondition(X4, mod, last, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, number, four, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obl_in, X4, propriedades= [action_date] --- []),  DCondition(X5, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, obj, X1, propriedades= [select] --- []),  DCondition(X5, subj, X6, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 20  numEntitiesNOk = 0  numClassesOk = 4]	SELECT  ?document1 WHERE {  ?document dblp:authoredBy ?creator .  ?creator dblp:creatorName ?creatorName . filter (regex(?creatorName,"Yang","i")). filter (regex(?creatorName,"Meng","i")). ?document dblp:yearOfPublication ?year. filter (?year > year(now()) -4). } 	4	TC15	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/44/2761-13> . ?answer <https://dblp.org/rdf/schema#yearOfPublication> ?y FILTER(?y > YEAR(NOW())-4) }" }
44	Q0119	MULTI_FACT	 "Which papers did the author K. Cheng write with the author from Hong Kong University of Science and Technology?" 	DEntity(X1, paper, papers, NOUN, which, 2, null),  DEntity(X2, author, author, NOUN, the, 5, null),  DEntity(X3, write, write, VERB, null, 8, null),  DEntity(X4, author, author, NOUN, the, 11, null),  DEntity(X5, Hong Kong University of Science and Technology, University, PROPN, null, 15, null)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- []),  DCondition(X2, has_text, author, propriedades= [] --- []),  DCondition(X2, has_name, K. Cheng, propriedades= [] --- []),  DCondition(X3, has_text, write, propriedades= [] --- []),  DCondition(X4, has_text, author, propriedades= [] --- []),  DCondition(X5, has_name, Hong Kong University of Science and Technology, propriedades= [] --- []),  DCondition(X3, obj, X1, propriedades= [] --- []),  DCondition(X3, subj, X2, propriedades= [] --- []),  DCondition(X3, obl_with, X4, propriedades= [] --- []),  DCondition(X4, from, X5, propriedades= [] --- [])]	dEntities=[ DEntity(X1, paper, papers, NOUN, which, null, Document),  DEntity(X2, author, author, NOUN, the, null, Person),  DEntity(X3, write, write, VERB, null, null, Create),  DEntity(X4, author, author, NOUN, the, null, Person),  DEntity(X5, Hong Kong University of Science and Technology, University, PROPN, null, null, Place),  DEntity(X6, null, null, null, null, null, Query),  DEntity(X7, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, K. Cheng, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, write, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, Hong Kong University of Science and Technology, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [create_what] --- []),  DCondition(X3, subj, X2, propriedades= [who_create] --- []),  DCondition(X3, obl_with, X4, propriedades= [create_with] --- []),  DCondition(X4, from, X5, propriedades= [author_from] --- []),  DCondition(X6, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X7, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X7, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, obj, X1, propriedades= [select] --- []),  DCondition(X6, subj, X7, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 20  numEntitiesNOk = 0  numClassesOk = 4]	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"K. Cheng”,"i")). ?document1 dblp:authoredBy ?person1 . ?document1 dblp:authoredBy ?person2 . person2 dblp:primaryAffiliation ?place1 . filter (regex(?place1,"Hong Kong University of Science and Technology”,"i")). } 	4	TC16	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/c/KwangTingCheng> . ?answer <https://dblp.org/rdf/schema#authoredBy> ?y . ?y <https://dblp.org/rdf/schema#primaryAffiliation> 'Hong Kong University of Science and Technology' }" }
45	Q0125	MULTI_FACT	"Which papers did the author Dimitrov, Dimitar K. write with the author from ETH Zürich?" 	dEntities=[ DEntity(X1, paper, papers, NOUN, which, 2, null),  DEntity(X2, author, author, NOUN, the, 5, null),  DEntity(X4, write, write, VERB, null, 9, null),  DEntity(X5, author, author, NOUN, the, 12, null),  DEntity(X6, ETH Zurich, ETH, PROPN, null, 14, null)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- []),  DCondition(X2, has_text, author, propriedades= [] --- []),  DCondition(X2, has_name, Dimitrov Dimitar K., propriedades= [] --- []),  DCondition(X4, has_text, write, propriedades= [] --- []),  DCondition(X5, has_text, author, propriedades= [] --- []),  DCondition(X6, has_name, ETH Zurich, propriedades= [] --- []),  DCondition(X4, obj, X1, propriedades= [] --- []),  DCondition(X4, subj, X2, propriedades= [] --- []),  DCondition(X4, obl_with, X5, propriedades= [] --- []),  DCondition(X4, obl_from, X6, propriedades= [] --- [])]	dEntities=[ DEntity(X1, paper, papers, NOUN, which, null, Document),  DEntity(X2, author, author, NOUN, the, null, Person),  DEntity(X3, write, write, VERB, null, null, Create),  DEntity(X4, author, author, NOUN, the, null, Person),  DEntity(X5, ETH Zurich, ETH, PROPN, null, null, Place),  DEntity(X6, null, null, null, null, null, Query),  DEntity(X7, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Dimitrov Dimitar K., propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, write, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, ETH Zurich, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [create_what] --- []),  DCondition(X3, subj, X2, propriedades= [who_create] --- []),  DCondition(X3, obl_with, X4, propriedades= [create_with] --- []),  DCondition(X3, obl_from, X5, propriedades= [create_from] --- []),  DCondition(X6, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X7, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X7, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, obj, X1, propriedades= [select] --- []),  DCondition(X6, subj, X7, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 24  numEntitiesNOk = 0  numClassesOk = 4]	"SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Dimitrov Dimitar K.”,"i")). ?document1 dblp:authoredBy ?person1 . ?document1 dblp:authoredBy ?person2 . person2 dblp:primaryAffiliation ?place1 . filter (regex(?place1,"ETH Zurich”,"i")). } 	4	TC16	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/44/4685-2> . ?answer <https://dblp.org/rdf/schema#authoredBy> ?y . ?y <https://dblp.org/rdf/schema#primaryAffiliation> 'ETH Z\\u00FCrich, Switzerland' }" }
46	Q0137	MULTI_FACT	 "Which papers did the author Gong, P. write with the author from Beijing Institute of Technology, School of Mechatronical Engineering, China?"	dEntities=[ DEntity(X1, paper, papers, NOUN, which, 2, null),  DEntity(X2, author, author, NOUN, the, 5, null),  DEntity(X3, write, write, VERB, null, 9, null),  DEntity(X4, author, author, NOUN, the, 12, null),  DEntity(X5, China School Beijing Institute, Institute, PROPN, null, 15, null),  DEntity(X6, Technology, Technology, PROPN, null, 17, null),  DEntity(X7, Engineering, Engineering, PROPN, null, 22, null)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- []),  DCondition(X2, has_text, author, propriedades= [] --- []),  DCondition(X2, has_name, Gong P., propriedades= [] --- []),  DCondition(X3, has_text, write, propriedades= [] --- []),  DCondition(X4, has_text, author, propriedades= [] --- []),  DCondition(X5, has_name, China School Beijing Institute, propriedades= [] --- []),  DCondition(X6, has_name, Technology, propriedades= [] --- []),  DCondition(X7, has_name, Engineering, propriedades= [] --- []),  DCondition(X3, obj, X1, propriedades= [] --- []),  DCondition(X3, subj, X2, propriedades= [] --- []),  DCondition(X3, obl_with, X4, propriedades= [] --- []),  DCondition(X4, from, X5, propriedades= [] --- []),  DCondition(X5, of, X6, propriedades= [] --- []),  DCondition(X7, mod, Mechatronical, propriedades= [] --- []),  DCondition(X5, of, X7, propriedades= [] --- [])]	dEntities=[ DEntity(X1, paper, papers, NOUN, which, null, Document),  DEntity(X2, author, author, NOUN, the, null, Person),  DEntity(X3, write, write, VERB, null, null, Create),  DEntity(X4, author, author, NOUN, the, null, Person),  DEntity(X5, China School Beijing Institute, Institute, PROPN, null, null, Place),  DEntity(X6, Technology, Technology, PROPN, null, null, Place),  DEntity(X7, Engineering, Engineering, PROPN, null, null, Place),  DEntity(X8, null, null, null, null, null, Query),  DEntity(X9, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Gong P., propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, write, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, China School Beijing Institute, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_name, Technology, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X7, has_name, Engineering, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [create_what] --- []),  DCondition(X3, subj, X2, propriedades= [who_create] --- []),  DCondition(X3, obl_with, X4, propriedades= [create_with] --- []),  DCondition(X4, from, X5, propriedades= [author_from] --- []),  DCondition(X5, of, X6, propriedades= [place_specification] --- []),  DCondition(X7, mod, Mechatronical, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, of, X7, propriedades= [place_specification] --- []),  DCondition(X8, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X9, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X9, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X8, obj, X1, propriedades= [select] --- []),  DCondition(X8, subj, X9, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 32  numEntitiesNOk = 0  numClassesOk = 4]	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Gong P.”,"i")). ?document1 dblp:authoredBy ?person1 . ?document1 dblp:authoredBy ?person2 . person2 dblp:primaryAffiliation ?place1 . filter (regex(?place1,"China School Beijing Institute”,"i")). filter (regex(?place1,"Technology”,"i")). filter (regex(?place1,"Engineering”,"i")). filter (regex(?place1,"Mechatronical”,"i")). }	4	TC16	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/27/1615-1> . ?answer <https://dblp.org/rdf/schema#authoredBy> ?y . ?y <https://dblp.org/rdf/schema#primaryAffiliation> 'Beijing Institute of Technology, School of Mechatronical Engineering, China' }" }
47	Q0101	MULTI_FACT	 "Find the paper written by Carlee Joe-Wong with Liang Zheng that was published in INFOCOM." 	dEntities=[ DEntity(X1, find, Find, VERB, null, 1, null),  DEntity(X2, paper, paper, NOUN, the, 3, null),  DEntity(X3, write, written, VERB, null, 4, null),  DEntity(X4, Carlee Joe-Wong, Carlee, PROPN, null, 6, null),  DEntity(X5, Liang Zheng, Liang, PROPN, null, 10, null),  DEntity(X6, publish, published, VERB, null, 14, null),  DEntity(X7, INFOCOM, INFOCOM, PROPN, null, 16, null)],  dConditions=[ DCondition(X1, has_text, find, propriedades= [] --- []),  DCondition(X2, has_text, paper, propriedades= [] --- []),  DCondition(X3, has_text, write, propriedades= [] --- []),  DCondition(X4, has_name, Carlee Joe-Wong, propriedades= [] --- []),  DCondition(X5, has_name, Liang Zheng, propriedades= [] --- []),  DCondition(X6, has_text, that, propriedades= [] --- []),  DCondition(X6, has_text, publish, propriedades= [] --- []),  DCondition(X7, has_name, INFOCOM, propriedades= [] --- []),  DCondition(X1, obj, X2, propriedades= [] --- []),  DCondition(X3, nsubj:pass, X2, propriedades= [] --- []),  DCondition(X3, obl_by, X4, propriedades= [] --- []),  DCondition(X3, obl_with, X5, propriedades= [] --- []),  DCondition(X6, nsubj:pass, X5, propriedades= [] --- []),  DCondition(X6, obl_in, X7, propriedades= [] --- [])]	dEntities=[ DEntity(X1, find, Find, VERB, null, null, Query),  DEntity(X2, paper, paper, NOUN, the, null, Document),  DEntity(X3, write, written, VERB, null, null, Create),  DEntity(X4, Carlee Joe-Wong, Carlee, PROPN, null, null, Person),  DEntity(X5, Liang Zheng, Liang, PROPN, null, null, Person),  DEntity(X6, publish, published, VERB, null, null, Create),  DEntity(X7, INFOCOM, INFOCOM, PROPN, null, null, ConceptDocument),  DEntity(X8, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, find, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, write, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, Carlee Joe-Wong, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, Liang Zheng, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_text, that, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X7, has_name, INFOCOM, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, obj, X2, propriedades= [aggregate, select] --- []),  DCondition(X3, nsubj:pass, X2, propriedades= [create_what] --- []),  DCondition(X3, obl_by, X4, propriedades= [create_with, who_create] --- []),  DCondition(X3, obl_with, X5, propriedades= [create_with, who_create] --- []),  DCondition(X6, nsubj:pass, X5, propriedades= [create_with, who_create] --- []),  DCondition(X6, obl_in, X7, propriedades= [create_in] --- []),  DCondition(X8, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X8, has_name, null, propriedades= [] --- []),  DCondition(X1, subj, X8, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 20  numEntitiesNOk = 0  numClassesOk = 3]	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Carlee Joe-Wong","i")). ?document1 dblp:authoredBy ?person1 . ?person2 dblp:creatorName ?personName2 . filter (regex(?personName2,"Liang Zheng","i")). ?document1 dblp:authoredBy ?person2 . ?document1 ?prop1 ?conceptDocument1 . filter (regex(?prop,"publish","i")) . filter (regex(?conceptDocument1,"INFOCOM","i")) . } 	4	TC17	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/40/9937> . ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/61/7360-2> . ?answer <https://dblp.org/rdf/schema#publishedIn> 'INFOCOM' }" }
48	Q0109	MULTI_FACT	 "In Inf. Serv. Use, which paper written by Sabrina K. with Julie McKinney was published?" 	dEntities=[ DEntity(X1, Inf. Serv. Use, Inf., PROPN, null, 2, null),  DEntity(X2, paper, paper, NOUN, which, 5, null),  DEntity(X3, write, written, VERB, null, 6, null),  DEntity(X4, Sabrina K., Sabrina, PROPN, null, 8, null),  DEntity(X5, Julie McKinney, Julie, PROPN, null, 11, null),  DEntity(X6, publish, published, VERB, null, 14, null)],  dConditions=[ DCondition(X1, has_name, Inf. Serv. Use, propriedades= [] --- []),  DCondition(X2, has_text, paper, propriedades= [] --- []),  DCondition(X3, has_text, write, propriedades= [] --- []),  DCondition(X4, has_name, Sabrina K., propriedades= [] --- []),  DCondition(X5, has_name, Julie McKinney, propriedades= [] --- []),  DCondition(X6, has_text, publish, propriedades= [] --- []),  DCondition(X6, obl_in, X1, propriedades= [] --- []),  DCondition(X6, nsubj:pass, X2, propriedades= [] --- []),  DCondition(X3, nsubj:pass, X2, propriedades= [] --- []),  DCondition(X3, obl_by, X4, propriedades= [] --- []),  DCondition(X3, obl_with, X5, propriedades= [] --- [])]	dEntities=[ DEntity(X1, Inf. Serv. Use, Inf., PROPN, null, null, ConceptDocument),  DEntity(X2, paper, paper, NOUN, which, null, Document),  DEntity(X3, write, written, VERB, null, null, Create),  DEntity(X4, Sabrina K., Sabrina, PROPN, null, null, Person),  DEntity(X5, Julie McKinney, Julie, PROPN, null, null, Person),  DEntity(X6, publish, published, VERB, null, null, Create),  DEntity(X7, null, null, null, null, null, Query),  DEntity(X8, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_name, Inf. Serv. Use, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, write, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, Sabrina K., propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, Julie McKinney, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, obl_in, X1, propriedades= [create_in] --- []),  DCondition(X6, nsubj:pass, X2, propriedades= [create_what] --- []),  DCondition(X3, nsubj:pass, X2, propriedades= [create_what] --- []),  DCondition(X3, obl_by, X4, propriedades= [who_create] --- []),  DCondition(X3, obl_with, X5, propriedades= [create_with] --- []),  DCondition(X7, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X8, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X8, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X7, obj, X2, propriedades= [select] --- []),  DCondition(X7, subj, X8, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 28  numEntitiesNOk = -4  numClassesOk = 3	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Sabrina K.","i")). ?document1 dblp:authoredBy ?person1 . ?person2 dblp:creatorName ?personName2 . filter (regex(?personName2,"Julie McKinney","i")). ?document1 dblp:authoredBy ?person2 . ?document1 ?prop1 ?conceptDocument1 . filter (regex(?prop,"publish","i")) . filter (regex(?conceptDocument1,"Inf. Serv. Use","i")) . }	4	TC17	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/202/0639> . ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/202/0683> . ?answer <https://dblp.org/rdf/schema#publishedIn> 'Inf. Serv. Use' }" }
49	Q0123	MULTI_FACT	 "Find the paper written by Wen-Hsiung Lee with Paul D. Gader that was published in IEEE Trans. Geosci. Remote. Sens.." 	dEntities=[ DEntity(X1, find, Find, VERB, null, 1, null),  DEntity(X2, paper, paper, NOUN, the, 3, null),  DEntity(X3, write, written, VERB, null, 4, null),  DEntity(X4, Wen-Hsiung Lee, WenHsiung, PROPN, null, 6, null),  DEntity(X5, Paul D. Gader, Paul, PROPN, null, 9, null),  DEntity(X6, publish, published, VERB, null, 14, null),  DEntity(X7, IEEE Trans. Geosci. Remote. Sens., IEEE Trans. Geosci. Remote. Sens., PROPN, null, 16, null)],  dConditions=[ DCondition(X1, has_text, find, propriedades= [] --- []),  DCondition(X2, has_text, paper, propriedades= [] --- []),  DCondition(X3, has_text, write, propriedades= [] --- []),  DCondition(X4, has_name, Wen-Hsiung Lee, propriedades= [] --- []),  DCondition(X5, has_name, Paul D. Gader, propriedades= [] --- []),  DCondition(X6, has_text, that, propriedades= [] --- []),  DCondition(X6, has_text, publish, propriedades= [] --- []),  DCondition(X7, has_name, IEEE Trans. Geosci. Remote. Sens., propriedades= [] --- []),  DCondition(X1, obj, X2, propriedades= [] --- []),  DCondition(X3, nsubj:pass, X2, propriedades= [] --- []),  DCondition(X3, obl_by, X4, propriedades= [] --- []),  DCondition(X3, obl_with, X5, propriedades= [] --- []),  DCondition(X6, nsubj:pass, X2, propriedades= [] --- []),  DCondition(X6, obl_in, X7, propriedades= [] --- [])]	n.a.	n.a.	2	TC17	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/82/9897> . ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/66/4077> . ?answer <https://dblp.org/rdf/schema#publishedIn> 'IEEE Trans. Geosci. Remote. Sens.' }" }
50	Q1145	MULTI_FACT	"Mention the venue of the paper 'Edge-Coloring Bipartite Graphs' authored by Ajai K.."	DEntity(X1, mention, Mention, VERB, null, 1, null),  DEntity(X2, venue, venue, NOUN, the, 3, null),  DEntity(X3, paper, paper, NOUN, the, 6, null),  DEntity(X5, author, authored, VERB, null, 10, null),  DEntity(X6, Ajai K., Ajai, PROPN, null, 12, null)],  dConditions=[ DCondition(X1, has_text, mention, propriedades= [] --- []),  DCondition(X2, has_text, venue, propriedades= [] --- []),  DCondition(X3, has_text, paper, propriedades= [] --- []),  DCondition(X3, has_name, Edge-Coloring Bipartite Graphs, propriedades= [] --- []),  DCondition(X5, has_text, author, propriedades= [] --- []),  DCondition(X6, has_name, Ajai K., propriedades= [] --- []),  DCondition(X1, obj, X2, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- []),  DCondition(X5, nsubj:pass, X3, propriedades= [] --- []),  DCondition(X5, obl_by, X6, propriedades= [] --- [])]	dEntities=[ DEntity(X1, mention, Mention, VERB, null, null, Query),  DEntity(X2, venue, venue, NOUN, the, null, ConceptDocument),  DEntity(X3, paper, paper, NOUN, the, null, Document),  DEntity(X4, author, authored, VERB, null, null, Create),  DEntity(X5, Ajai K., Ajai, PROPN, null, null, Person),  DEntity(X6, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, mention, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, venue, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, Edge-Coloring Bipartite Graphs, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, Ajai K., propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, obj, X2, propriedades= [select] --- []),  DCondition(X2, of, X3, propriedades= [conc_of_Document] --- []),  DCondition(X4, nsubj:pass, X3, propriedades= [create_what] --- []),  DCondition(X4, obl_by, X5, propriedades= [create_with, who_create] --- []),  DCondition(X6, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_name, null, propriedades= [] --- []),  DCondition(X1, subj, X6, propriedades= [qQualifier] --- [])]  numEntitiesOk = 2  numPropsOk = 16  numEntitiesNOk = 0  numClassesOk = 4	SELECT ?conceptDocument1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Ajai K.","i")). ?document1 dblp:authoredBy ?person1 . ?document1 ?prop1 ?conceptDocument1 . filter (regex(?prop1,"publish","i")). ?document1 dblp:title ?title1 . filter (regex(?title1,"Edge-Coloring Bipartite Graphs","i")). } 	4	TC17	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/rec/journals/jal/KapoorR00> <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/70/6007> . <https://dblp.org/rec/journals/jal/KapoorR00> <https://dblp.org/rdf/schema#publishedIn> ?answer }" }
qN	qID	type	rephrased-question	DRS-REf-question	DRS-Ont-REf-question	SPARQL-REf-question	Result-REf-question	template-id	SPARQL
51	Q0002	SINGLE_FACT	 "What are the papers written by the person Sara Rodriguez?" 	dEntities=[ DEntity(X1, paper, papers, NOUN, the, 4, null),  DEntity(X2, write, written, VERB, null, 5, null),  DEntity(X3, person, person, NOUN, the, 8, null)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- []),  DCondition(X2, has_text, write, propriedades= [] --- []),  DCondition(X3, has_text, person, propriedades= [] --- []),  DCondition(X3, has_name, Sara Rodriguez, propriedades= [] --- []),  DCondition(X1, what, true, propriedades= [] --- []),  DCondition(X2, nsubj:pass, X1, propriedades= [] --- []),  DCondition(X2, obl_by, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, paper, papers, NOUN, the, null, Document),  DEntity(X2, write, written, VERB, null, null, Create),  DEntity(X3, person, person, NOUN, the, null, Person),  DEntity(X4, null, null, null, null, null, Query),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, write, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, person, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, Sara Rodriguez, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, nsubj:pass, X1, propriedades= [create_what] --- []),  DCondition(X2, obl_by, X3, propriedades= [who_create] --- []),  DCondition(X4, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X1, propriedades= [select] --- []),  DCondition(X4, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 16  numEntitiesNOk = 0  numClassesOk = 3]	SELECT ?document1 WHERE {  ?document1 dblp:authoredBy ?person1 .  ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Sara Rodriguez","i")). } 	4	TC01	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/04/6636> }" }
52	Q0004	SINGLE_FACT	 "What are the papers written by the person Daniel Neamati?" 	dEntities=[ DEntity(X1, paper, papers, NOUN, the, 4, null),  DEntity(X2, write, written, VERB, null, 5, null),  DEntity(X3, person, person, NOUN, the, 8, null)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- []),  DCondition(X2, has_text, write, propriedades= [] --- []),  DCondition(X3, has_text, person, propriedades= [] --- []),  DCondition(X3, has_name, Daniel Neamati, propriedades= [] --- []),  DCondition(X1, what, true, propriedades= [] --- []),  DCondition(X2, nsubj:pass, X1, propriedades= [] --- []),  DCondition(X2, obl_by, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, paper, papers, NOUN, the, null, Document),  DEntity(X2, write, written, VERB, null, null, Create),  DEntity(X3, person, person, NOUN, the, null, Person),  DEntity(X4, null, null, null, null, null, Query),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, write, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, person, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, Daniel Neamati, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, nsubj:pass, X1, propriedades= [create_what] --- []),  DCondition(X2, obl_by, X3, propriedades= [who_create] --- []),  DCondition(X4, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X1, propriedades= [select] --- []),  DCondition(X4, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 16  numEntitiesNOk = 0  numClassesOk = 3]	SELECT ?document1 WHERE {  ?document1 dblp:authoredBy ?person1 .  ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Daniel Neamati","i")). } 	4	TC01	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/304/4294> }" }
53	Q0012	SINGLE_FACT	 "What are the papers written by the person Omer L.?" 	dEntities=[ DEntity(X2, paper, papers, NOUN, the, 4, null),  DEntity(X3, write, written, VERB, null, 5, null),  DEntity(X4, person, person, NOUN, the, 8, null)],  dConditions=[ DCondition(X2, has_text, paper, propriedades= [] --- []),  DCondition(X3, has_text, write, propriedades= [] --- []),  DCondition(X4, has_text, person, propriedades= [] --- []),  DCondition(X4, has_name, Omer L.?, propriedades= [] --- []),  DCondition(X2, what, true, propriedades= [] --- []),  DCondition(X3, nsubj:pass, X2, propriedades= [] --- []),  DCondition(X3, obl_by, X4, propriedades= [] --- [])]	dEntities=[ DEntity(X1, paper, papers, NOUN, the, null, Document),  DEntity(X2, write, written, VERB, null, null, Create),  DEntity(X3, person, person, NOUN, the, null, Person),  DEntity(X4, null, null, null, null, null, Query),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, write, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, person, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, Omer L.?, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, nsubj:pass, X1, propriedades= [create_what] --- []),  DCondition(X2, obl_by, X3, propriedades= [who_create] --- []),  DCondition(X4, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X1, propriedades= [select] --- []),  DCondition(X4, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 16  numEntitiesNOk = 0  numClassesOk = 3]	SELECT ?document1 WHERE {  ?document1 dblp:authoredBy ?person1 .  ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,""Omer L.?"",""i"")). } "	3	TC01	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/93/5969> }" }
54	Q0026	SINGLE_FACT	 "What are the papers written by João Manuel R. S. Tavares?" 	dEntities=[ DEntity(X2, paper, papers, NOUN, the, 4, null),  DEntity(X3, write, written, VERB, null, 5, null),  DEntity(X4, João Manuel R. S. Tavares, João, PROPN, null, 7, null)],  dConditions=[ DCondition(X2, has_text, paper, propriedades= [] --- []),  DCondition(X3, has_text, write, propriedades= [] --- []),  DCondition(X4, has_name, João Manuel R. S. Tavares, propriedades= [] --- []),  DCondition(X2, what, true, propriedades= [] --- []),  DCondition(X3, nsubj:pass, X2, propriedades= [] --- []),  DCondition(X3, obl_by, X4, propriedades= [] --- [])]	DEntity(X1, paper, papers, NOUN, the, null, Document),  DEntity(X2, write, written, VERB, null, null, Create),  DEntity(X3, João Manuel R. S. Tavares, João, PROPN, null, null, Person),  DEntity(X4, null, null, null, null, null, Query),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, write, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, João Manuel R. S. Tavares, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, nsubj:pass, X1, propriedades= [create_what] --- []),  DCondition(X2, obl_by, X3, propriedades= [who_create] --- []),  DCondition(X4, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X1, propriedades= [select] --- []),  DCondition(X4, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 16  numEntitiesNOk = 0  numClassesOk = 2]	SELECT ?document1 WHERE {  ?document1 dblp:authoredBy ?person1 .  ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,""João Manuel R. S. Tavares"",""i"")). }	4	TC01	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/t/JoaoManuelRSTavares> }" }
55	Q0091	SINGLE_FACT	 "Which publications did Matti O. Jokinen author?" 	n.a.	n.a.	n.a.	0	TC01	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/51/4130> }" }
56	Q0007	SINGLE_FACT	 "Sameh S. Askar is primarily affiliated to which institution?" 	dEntities=[ DEntity(X1, Sameh S. Askar, Sameh, PROPN, null, 1, null),  DEntity(X2, affiliate, affiliated, VERB, null, 6, null),  DEntity(X3, institution, institution, NOUN, which, 9, null)],  dConditions=[ DCondition(X1, has_name, Sameh S. Askar, propriedades= [] --- []),  DCondition(X2, has_text, affiliate, propriedades= [] --- []),  DCondition(X3, has_text, institution, propriedades= [] --- []),  DCondition(X2, nsubj:pass, X1, propriedades= [] --- []),  DCondition(X2, mod, primarily, propriedades= [] --- []),  DCondition(X2, obl_to, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, Sameh S. Askar, Sameh, PROPN, null, null, Person),  DEntity(X2, affiliate, affiliated, VERB, null, null, Associate),  DEntity(X3, institution, institution, NOUN, which, null, ConceptPerson),  DEntity(X4, null, null, null, null, null, Query),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_name, Sameh S. Askar, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, affiliate, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, institution, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, nsubj:pass, X1, propriedades= [assoc_Person] --- []),  DCondition(X2, mod, primarily, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, obl_to, X3, propriedades= [assoc_ConcPerson] --- []),  DCondition(X4, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X3, propriedades= [select] --- []),  DCondition(X4, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 12  numEntitiesNOk = 0  numClassesOk = 1]]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Sameh S. Askar","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"affiliation","i")). filter (regex(?prop,"primary","i")). } 	4	TC02	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/141/4165> <https://dblp.org/rdf/schema#primaryAffiliation> ?answer }" }
57	Q0037	SINGLE_FACT	 "What is the primary affiliation of the author Khaled Salah?" 	dEntities=[ DEntity(X1, mention, Mention, VERB, null, 1, null),  DEntity(X2, affiliation, affiliation, NOUN, the, 4, null),  DEntity(X3, Khaled Salah, Khaled, PROPN, null, 6, null)],  dConditions=[ DCondition(X1, has_text, mention, propriedades= [] --- []),  DCondition(X2, has_text, affiliation, propriedades= [] --- []),  DCondition(X3, has_name, Khaled Salah, propriedades= [] --- []),  DCondition(X2, mod, primary, propriedades= [] --- []),  DCondition(X1, obj, X2, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, mention, Mention, VERB, null, null, Query),  DEntity(X2, affiliation, affiliation, NOUN, the, null, ConceptPerson),  DEntity(X3, Khaled Salah, Khaled, PROPN, null, null, Person),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, mention, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, affiliation, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X3, has_name, Khaled Salah, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, mod, primary, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X1, obj, X2, propriedades= [select] --- []),  DCondition(X2, of, X3, propriedades= [conc_of_Person] --- []),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, null, propriedades= [] --- []),  DCondition(X1, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 8  numEntitiesNOk = 0  numClassesOk = 2]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"  Khaled Salah","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"affiliation","i")). filter (regex(?prop,"primary","i")). } 	4	TC02	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/s/KhaledSalah> <https://dblp.org/rdf/schema#primaryAffiliation> ?answer }" }
58	Q0049	SINGLE_FACT	 "Shengli W. is primarily affiliated to which institution?" 	dEntities=[ DEntity(X1, Shengli W., Shengli, PROPN, null, 1, null),  DEntity(X2, affiliate, affiliated, VERB, null, 5, null),  DEntity(X3, institution, institution, NOUN, which, 8, null)],  dConditions=[ DCondition(X1, has_name, Shengli W., propriedades= [] --- []),  DCondition(X2, has_text, affiliate, propriedades= [] --- []),  DCondition(X3, has_text, institution, propriedades= [] --- []),  DCondition(X2, nsubj:pass, X1, propriedades= [] --- []),  DCondition(X2, mod, primarily, propriedades= [] --- []),  DCondition(X2, obl_to, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, Shengli W., Shengli, PROPN, null, null, Person),  DEntity(X2, affiliate, affiliated, VERB, null, null, Associate),  DEntity(X3, institution, institution, NOUN, which, null, ConceptPerson),  DEntity(X4, null, null, null, null, null, Query),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_name, Shengli W., propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, affiliate, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, institution, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, nsubj:pass, X1, propriedades= [assoc_Person] --- []),  DCondition(X2, mod, primarily, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, obl_to, X3, propriedades= [assoc_ConcPerson] --- []),  DCondition(X4, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X3, propriedades= [select] --- []),  DCondition(X4, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 12  numEntitiesNOk = 0  numClassesOk = 1]]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"  Shengli W.","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"affiliation","i")). filter (regex(?prop,"primary","i")). } 	4	TC02	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/w/ShengliWu> <https://dblp.org/rdf/schema#primaryAffiliation> ?answer }" }
59	Q0065	SINGLE_FACT	 "What is the primary affiliation of János Pach?" 	dEntities=[ DEntity(X1, affiliation, affiliation, NOUN, the, 5, null),  DEntity(X2, János Pach, János, PROPN, null, 7, null)],  dConditions=[ DCondition(X1, has_text, affiliation, propriedades= [] --- []),  DCondition(X2, has_name, János Pach, propriedades= [] --- []),  DCondition(X1, mod, primary, propriedades= [] --- []),  DCondition(X1, what, true, propriedades= [] --- []),  DCondition(X1, of, X2, propriedades= [] --- [])]	dEntities=[ DEntity(X1, affiliation, affiliation, NOUN, the, null, ConceptPerson),  DEntity(X2, János Pach, János, PROPN, null, null, Person),  DEntity(X3, null, null, null, null, null, Query),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, affiliation, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, has_name, János Pach, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, mod, primary, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X1, of, X2, propriedades= [conc_of_Person] --- []),  DCondition(X3, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [select] --- []),  DCondition(X3, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 12  numEntitiesNOk = 0  numClassesOk = 1]]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"János Pach","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"affiliation","i")). filter (regex(?prop,"primary","i")). } 	4	TC02	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/18/2119> <https://dblp.org/rdf/schema#primaryAffiliation> ?answer }" }
60	Q0085	SINGLE_FACT	 "Find the primary affiliation of Ingrid Zukerman." 	dEntities=[ DEntity(X1, find, Find, VERB, null, 1, null),  DEntity(X2, affiliation, affiliation, NOUN, the, 4, null),  DEntity(X3, Ingrid Zukerman, Ingrid, PROPN, null, 6, null)],  dConditions=[ DCondition(X1, has_text, find, propriedades= [] --- []),  DCondition(X2, has_text, affiliation, propriedades= [] --- []),  DCondition(X3, has_name, Ingrid Zukerman, propriedades= [] --- []),  DCondition(X2, mod, primary, propriedades= [] --- []),  DCondition(X1, obj, X2, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, find, Find, VERB, null, null, Associate),  DEntity(X2, affiliation, affiliation, NOUN, the, null, ConceptPerson),  DEntity(X3, Ingrid Zukerman, Ingrid, PROPN, null, null, Person),  DEntity(X4, null, null, null, null, null, Query),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, find, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, affiliation, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X3, has_name, Ingrid Zukerman, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, mod, primary, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X1, obj, X2, propriedades= [assoc_ConcPerson] --- []),  DCondition(X2, of, X3, propriedades= [conc_of_Person] --- []),  DCondition(X4, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X2, propriedades= [select] --- []),  DCondition(X4, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 12  numEntitiesNOk = 0  numClassesOk = 1]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Ingrid Zukerman","i")). ?person1?prop1 ?conceptPerson1. filter (regex(?prop,"affiliation","i")). filter (regex(?prop,"primary","i")). } 	4	TC02	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/z/IngridZukerman> <https://dblp.org/rdf/schema#primaryAffiliation> ?answer }" }
61	Q0008	SINGLE_FACT	 "What is the ORCID of Matti Rossi?" 	dEntities=[ DEntity(X2, orcid, ORCID, NOUN, the, 4, null),  DEntity(X3, Matti Rossi, Matti, PROPN, null, 6, null)],  dConditions=[ DCondition(X2, has_text, orcid, propriedades= [] --- []),  DCondition(X3, has_name, Matti Rossi, propriedades= [] --- []),  DCondition(X2, what, true, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, orcid, ORCID, NOUN, the, null, ConceptPerson),  DEntity(X2, Matti Rossi, Matti, PROPN, null, null, Person),  DEntity(X3, null, null, null, null, null, Query),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, orcid, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, has_name, Matti Rossi, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X1, of, X2, propriedades= [conc_of_Person] --- []),  DCondition(X3, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [select] --- []),  DCondition(X3, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 12  numEntitiesNOk = 0  numClassesOk = 0]]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Matti Rossi","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"orcid","i")). } 	4	TC03	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/r/MattiRossi> <https://dblp.org/rdf/schema#orcid> ?answer }" }
62	Q0018	SINGLE_FACT	 "What is the ORCID of the person El-Gayar, Omar F.?" 	dEntities=[ DEntity(X1, orcid, ORCID, NOUN, the, 4, null),  DEntity(X2, person, person, NOUN, the, 7, null),  DEntity(X3, Omar F., Omar, PROPN, null, 12, null)],  dConditions=[ DCondition(X1, has_text, orcid, propriedades= [] --- []),  DCondition(X2, has_text, person, propriedades= [] --- []),  DCondition(X2, has_name, El Gayar, propriedades= [] --- []),  DCondition(X3, has_name, Omar F., propriedades= [] --- []),  DCondition(X1, what, true, propriedades= [] --- []),  DCondition(X1, of, X2, propriedades= [] --- [])]	n.a.	n.a.	1	TC03	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/16/304> <https://dblp.org/rdf/schema#orcid> ?answer }" }
63	Q0021	SINGLE_FACT	 "What is the ORCID of Goele Pipeleers?" 	dEntities=[ DEntity(X1, orcid, ORCID, NOUN, the, 4, null),  DEntity(X2, Goele Pipeleer, Pipeleers, PROPN, null, 7, null)],  dConditions=[ DCondition(X1, has_text, orcid, propriedades= [] --- []),  DCondition(X2, has_name, Goele Pipeleer, propriedades= [] --- []),  DCondition(X1, what, true, propriedades= [] --- []),  DCondition(X1, of, X2, propriedades= [] --- [])]	dEntities=[ DEntity(X1, orcid, ORCID, NOUN, the, null, ConceptPerson),  DEntity(X2, Goele Pipeleer, Pipeleers, PROPN, null, null, Person),  DEntity(X3, null, null, null, null, null, Query),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, orcid, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, has_name, Goele Pipeleer, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X1, of, X2, propriedades= [conc_of_Person] --- []),  DCondition(X3, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [select] --- []),  DCondition(X3, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 12  numEntitiesNOk = 0  numClassesOk = 1]]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Goele Pipeleers","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"orcid","i")). } 	4	TC03	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/98/4973> <https://dblp.org/rdf/schema#orcid> ?answer }" }
64	Q0024	SINGLE_FACT	 "What is the ORCID of James W. P. Hirschfeld?" 	dEntities=[ DEntity(X2, orcid, ORCID, NOUN, the, 4, null),  DEntity(X3, James W. P. Hirschfeld, James, PROPN, null, 6, null)],  dConditions=[ DCondition(X2, has_text, orcid, propriedades= [] --- []),  DCondition(X3, has_name, James W. P. Hirschfeld, propriedades= [] --- []),  DCondition(X2, what, true, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, orcid, ORCID, NOUN, the, null, ConceptPerson),  DEntity(X2, James W. P. Hirschfeld, James, PROPN, null, null, ConceptPerson),  DEntity(X3, null, null, null, null, null, Query),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, orcid, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, has_name, James W. P. Hirschfeld, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X1, of, X2, propriedades= [conc_of_conc_Person] --- []),  DCondition(X3, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [select] --- []),  DCondition(X3, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 12  numEntitiesNOk = 0  numClassesOk = 1]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"James W. P. Hirschfeld","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"orcid","i")). } 	4	TC03	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/h/JWPHirschfeld> <https://dblp.org/rdf/schema#orcid> ?answer }" }
65	Q0029	SINGLE_FACT	 "What is the ORCID of Turcanu, Ion?" 	dEntities=[ DEntity(X2, orcid, ORCID, NOUN, the, 4, null),  DEntity(X3, Ion Turcanu, Turcanu, PROPN, null, 6, null)],  dConditions=[ DCondition(X2, has_text, orcid, propriedades= [] --- []),  DCondition(X3, has_name, Ion Turcanu, propriedades= [] --- []),  DCondition(X2, what, true, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, orcid, ORCID, NOUN, the, null, ConceptPerson),  DEntity(X2, Ion Turcanu, Turcanu, PROPN, null, null, Person),  DEntity(X3, null, null, null, null, null, Query),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, orcid, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, has_name, Ion Turcanu, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X1, of, X2, propriedades= [conc_of_Person] --- []),  DCondition(X3, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [select] --- []),  DCondition(X3, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 12  numEntitiesNOk = 0  numClassesOk = 1]]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Ion Turcanu","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"orcid","i")). } 	4	TC03	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/170/2615> <https://dblp.org/rdf/schema#orcid> ?answer }" }
66	Q0001	SINGLE_FACT	 "What is the Wikidata identifier of the author Robert S.?" 	DEntity(X2, Wikidata, Wikidata, PROPN, null, 4, null),  DEntity(X3, identifier, identifier, NOUN, the, 5, null),  DEntity(X4, author, author, NOUN, the, 8, null)],  dConditions=[ DCondition(X2, has_name, Wikidata, propriedades= [] --- []),  DCondition(X3, has_text, identifier, propriedades= [] --- []),  DCondition(X4, has_text, author, propriedades= [] --- []),  DCondition(X4, has_name, Robert S., propriedades= [] --- []),  DCondition(X3, of, X2, propriedades= [] --- []),  DCondition(X3, what, true, propriedades= [] --- []),  DCondition(X3, of, X4, propriedades= [] --- [])]	dEntities=[ DEntity(X1, Wikidata, Wikidata, PROPN, null, null, ConceptPerson),  DEntity(X2, identifier, identifier, NOUN, the, null, ConceptPerson),  DEntity(X3, author, author, NOUN, the, null, Person),  DEntity(X4, null, null, null, null, null, Query),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_name, Wikidata, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, has_text, identifier, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X3, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, Robert S., propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, of, X1, propriedades= [conc_of_conc_Person] --- []),  DCondition(X2, what, true, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, of, X3, propriedades= [conc_of_Person] --- []),  DCondition(X4, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X2, propriedades= [select] --- []),  DCondition(X4, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 16  numEntitiesNOk = 0  numClassesOk = 1]]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Robert S.","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"wikidata","i")). }	4	TC04	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/95/2265> <https://dblp.org/rdf/schema#wikidata> ?answer }" }
67	Q0006	SINGLE_FACT	 "What is the Wikidata identifier of the author P. G. Tahoces?" 	dEntities=[ DEntity(X2, Wikidata, Wikidata, PROPN, null, 4, null),  DEntity(X3, identifier, identifier, NOUN, the, 5, null),  DEntity(X4, author, author, NOUN, the, 8, null)],  dConditions=[ DCondition(X2, has_name, Wikidata, propriedades= [] --- []),  DCondition(X3, has_text, identifier, propriedades= [] --- []),  DCondition(X4, has_text, author, propriedades= [] --- []),  DCondition(X4, has_name, P. G. Tahoce, propriedades= [] --- []),  DCondition(X3, of, X2, propriedades= [] --- []),  DCondition(X3, what, true, propriedades= [] --- []),  DCondition(X3, of, X4, propriedades= [] --- [])]	dEntities=[ DEntity(X1, Wikidata, Wikidata, PROPN, null, null, ConceptPerson),  DEntity(X2, identifier, identifier, NOUN, the, null, ConceptPerson),  DEntity(X3, author, author, NOUN, the, null, Person),  DEntity(X4, null, null, null, null, null, Query),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_name, Wikidata, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, has_text, identifier, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X3, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, P. G. Tahoce, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, of, X1, propriedades= [conc_of_conc_Person] --- []),  DCondition(X2, what, true, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, of, X3, propriedades= [conc_of_Person] --- []),  DCondition(X4, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X2, propriedades= [select] --- []),  DCondition(X4, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 16  numEntitiesNOk = 0  numClassesOk = 1]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"P. G. Tahoce","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"wikidata","i")). }	4	TC04	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/58/6070> <https://dblp.org/rdf/schema#wikidata> ?answer }" }
68	Q0022	SINGLE_FACT	 "What is the Wikidata identifier of the author Daniel S. Weld?" 	dEntities=[ DEntity(X1, Wikidata, Wikidata, PROPN, null, 4, null),  DEntity(X2, identifier, identifier, NOUN, the, 5, null),  DEntity(X3, author, author, NOUN, the, 8, null)],  dConditions=[ DCondition(X1, has_name, Wikidata, propriedades= [] --- []),  DCondition(X2, has_text, identifier, propriedades= [] --- []),  DCondition(X3, has_text, author, propriedades= [] --- []),  DCondition(X3, has_name, Daniel S. Weld, propriedades= [] --- []),  DCondition(X2, of, X1, propriedades= [] --- []),  DCondition(X2, what, true, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, Wikidata, Wikidata, PROPN, null, null, ConceptPerson),  DEntity(X2, identifier, identifier, NOUN, the, null, ConceptPerson),  DEntity(X3, author, author, NOUN, the, null, Person),  DEntity(X4, null, null, null, null, null, Query),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_name, Wikidata, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, has_text, identifier, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X3, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, Daniel S. Weld, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, of, X1, propriedades= [conc_of_conc_Person] --- []),  DCondition(X2, what, true, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, of, X3, propriedades= [conc_of_Person] --- []),  DCondition(X4, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X2, propriedades= [select] --- []),  DCondition(X4, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 16  numEntitiesNOk = 0  numClassesOk = 1]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Daniel S. Weld","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"wikidata","i")). }	4	TC04	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/w/DanielSWeld> <https://dblp.org/rdf/schema#wikidata> ?answer }" }
69	Q0031	SINGLE_FACT	 "What is the Wikidata ID of Borko Furht?" 	dEntities=[ DEntity(X1, Wikidata, Wikidata, PROPN, null, 4, null),  DEntity(X2, id, ID, NOUN, the, 5, null),  DEntity(X3, Borko Furht, Borko, PROPN, null, 7, null)],  dConditions=[ DCondition(X1, has_name, Wikidata, propriedades= [] --- []),  DCondition(X2, has_text, id, propriedades= [] --- []),  DCondition(X3, has_name, Borko Furht, propriedades= [] --- []),  DCondition(X2, of, X1, propriedades= [] --- []),  DCondition(X2, what, true, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, Wikidata, Wikidata, PROPN, null, null, ConceptPerson),  DEntity(X2, id, ID, NOUN, the, null, ConceptPerson),  DEntity(X3, Borko Furht, Borko, PROPN, null, null, Person),  DEntity(X4, null, null, null, null, null, Query),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_name, Wikidata, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, has_text, id, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X3, has_name, Borko Furht, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, of, X1, propriedades= [conc_of_conc_Person] --- []),  DCondition(X2, what, true, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, of, X3, propriedades= [conc_of_Person] --- []),  DCondition(X4, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X2, propriedades= [select] --- []),  DCondition(X4, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 16  numEntitiesNOk = 0  numClassesOk = 1]]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Borko Furht","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"wikidata","i")). }	4	TC04	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/f/BorkoFurht> <https://dblp.org/rdf/schema#wikidata> ?answer }" }
70	Q0047	SINGLE_FACT	 "The author Offutt, A. Jefferson is associated with which Wikidata identifier?" 	dEntities=[ DEntity(X1, author, author, NOUN, the, 2, null),  DEntity(X2, associate, associated, VERB, null, 8, null),  DEntity(X3, identifier, identifier, NOUN, which, 12, null)],  dConditions=[ DCondition(X1, has_text, author, propriedades= [] --- []),  DCondition(X1, has_name, Offutt A. Jefferson, propriedades= [] --- []),  DCondition(X2, has_text, associate, propriedades= [] --- []),  DCondition(X3, has_text, identifier, propriedades= [] --- []),  DCondition(X2, nsubj:pass, X1, propriedades= [] --- []),  DCondition(X3, mod, Wikidata, propriedades= [] --- []),  DCondition(X2, obl_with, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, author, author, NOUN, the, null, Person),  DEntity(X2, associate, associated, VERB, null, null, Associate),  DEntity(X3, identifier, identifier, NOUN, which, null, ConceptPerson),  DEntity(X4, null, null, null, null, null, Query),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, has_name, Offutt A. Jefferson, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, associate, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, identifier, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, nsubj:pass, X1, propriedades= [assoc_Person] --- []),  DCondition(X3, mod, Wikidata, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, obl_with, X3, propriedades= [assoc_ConcPerson] --- []),  DCondition(X4, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X3, propriedades= [select] --- []),  DCondition(X4, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 16  numEntitiesNOk = 0  numClassesOk = 2]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Offutt A. Jefferson","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"wikidata","i")). }	4	TC04	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/o/AJeffersonOffutt> <https://dblp.org/rdf/schema#wikidata> ?answer }" }
71	Q0003	SINGLE_FACT	 "Mention the webpage of the researcher Mohammad S.." 	dEntities=[ DEntity(X1, mention, Mention, VERB, null, 1, null),  DEntity(X2, webpage, webpage, NOUN, the, 3, null),  DEntity(X3, researcher, researcher, NOUN, the, 6, null)],  dConditions=[ DCondition(X1, has_text, mention, propriedades= [] --- []),  DCondition(X2, has_text, webpage, propriedades= [] --- []),  DCondition(X3, has_text, researcher, propriedades= [] --- []),  DCondition(X3, has_name, Mohammad S., propriedades= [] --- []),  DCondition(X1, obj, X2, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, mention, Mention, VERB, null, null, Query),  DEntity(X2, webpage, webpage, NOUN, the, null, ConceptPerson),  DEntity(X3, researcher, researcher, NOUN, the, null, Person),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, mention, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, webpage, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X3, has_text, researcher, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, Mohammad S.., propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, obj, X2, propriedades= [select] --- []),  DCondition(X2, of, X3, propriedades= [conc_of_Person] --- []),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, null, propriedades= [] --- []),  DCondition(X1, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 8  numEntitiesNOk = 0  numClassesOk = 2]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Mohammad S.","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"webpage","i")). }	4	TC05	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/s/MohammadSoleymani> <https://dblp.org/rdf/schema#webpage> ?answer }" }
72	Q0011	SINGLE_FACT	 "What is the webpage of the person Peter W. Glynn?" 	dEntities=[ DEntity(X2, webpage, webpage, NOUN, the, 4, null),  DEntity(X3, person, person, NOUN, the, 7, null)],  dConditions=[ DCondition(X2, has_text, webpage, propriedades= [] --- []),  DCondition(X3, has_text, person, propriedades= [] --- []),  DCondition(X3, has_name, Peter Glynn W., propriedades= [] --- []),  DCondition(X2, what, true, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, webpage, webpage, NOUN, the, null, ConceptPerson),  DEntity(X2, person, person, NOUN, the, null, Person),  DEntity(X3, null, null, null, null, null, Query),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, webpage, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, has_text, person, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Peter Glynn W., propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X1, of, X2, propriedades= [conc_of_Person] --- []),  DCondition(X3, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [select] --- []),  DCondition(X3, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 12  numEntitiesNOk = 0  numClassesOk = 2]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Peter Glynn W.","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"webpage","i")). }	4	TC05	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/g/PeterWGlynn> <https://dblp.org/rdf/schema#webpage> ?answer }" }
73	Q0036	SINGLE_FACT	 "Mention the webpage of the researcher Wang, Chao." 	dEntities=[ DEntity(X1, mention, Mention, VERB, null, 1, null),  DEntity(X2, webpage, webpage, NOUN, the, 3, null),  DEntity(X3, researcher, researcher, NOUN, the, 6, null)],  dConditions=[ DCondition(X1, has_text, mention, propriedades= [] --- []),  DCondition(X2, has_text, webpage, propriedades= [] --- []),  DCondition(X3, has_text, researcher, propriedades= [] --- []),  DCondition(X3, has_name, Wang Chao, propriedades= [] --- []),  DCondition(X1, obj, X2, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, mention, Mention, VERB, null, null, Query),  DEntity(X2, webpage, webpage, NOUN, the, null, ConceptPerson),  DEntity(X3, researcher, researcher, NOUN, the, null, Person),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, mention, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, webpage, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X3, has_text, researcher, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, Wang Chao, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, obj, X2, propriedades= [select] --- []),  DCondition(X2, of, X3, propriedades= [conc_of_Person] --- []),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, null, propriedades= [] --- []),  DCondition(X1, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 8  numEntitiesNOk = 0  numClassesOk = 2]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Wang Chao","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"webpage","i")). }	4	TC05	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/w/ChaoWang> <https://dblp.org/rdf/schema#webpage> ?answer }" }
74	Q0046	SINGLE_FACT	 "What is the webpage of Christian Wagner?" 	dEntities=[ DEntity(X1, webpage, webpage, NOUN, the, 4, null),  DEntity(X2, Christian Wagner, Christian, PROPN, null, 6, null)],  dConditions=[ DCondition(X1, has_text, webpage, propriedades= [] --- []),  DCondition(X2, has_name, Christian Wagner, propriedades= [] --- []),  DCondition(X1, what, true, propriedades= [] --- []),  DCondition(X1, of, X2, propriedades= [] --- [])]	dEntities=[ DEntity(X1, webpage, webpage, NOUN, the, null, ConceptPerson),  DEntity(X2, Christian Wagner, Christian, PROPN, null, null, Person),  DEntity(X3, null, null, null, null, null, Query),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, webpage, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, has_name, Christian Wagner, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X1, of, X2, propriedades= [conc_of_Person] --- []),  DCondition(X3, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [select] --- []),  DCondition(X3, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 12  numEntitiesNOk = 0  numClassesOk = 1]]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Christian Wagner","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"webpage","i")). }	4	TC05	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/01/2903-1> <https://dblp.org/rdf/schema#webpage> ?answer }" }
75	Q0072	SINGLE_FACT	 "What is the webpage of the author Habib Fardoun?" 	dEntities=[ DEntity(X1, webpage, webpage, NOUN, the, 4, null),  DEntity(X2, author, author, NOUN, the, 7, null)],  dConditions=[ DCondition(X1, has_text, webpage, propriedades= [] --- []),  DCondition(X2, has_text, author, propriedades= [] --- []),  DCondition(X2, has_name, Habib Fardoun, propriedades= [] --- []),  DCondition(X1, what, true, propriedades= [] --- []),  DCondition(X1, of, X2, propriedades= [] --- [])]	dEntities=[ DEntity(X1, webpage, webpage, NOUN, the, null, ConceptPerson),  DEntity(X2, author, author, NOUN, the, null, Person),  DEntity(X3, null, null, null, null, null, Query),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, webpage, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X2, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Habib Fardoun, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what, especifica]),  DCondition(X1, of, X2, propriedades= [conc_of_Person] --- []),  DCondition(X3, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [select] --- []),  DCondition(X3, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 0   numPropsOk = 12  numEntitiesNOk = 0  numClassesOk = 2]	SELECT ?conceptPerson1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Habib Fardoun","i")). ?person1 ?prop1 ?conceptPerson1. filter (regex(?prop,"webpage","i")). }	4	TC05	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/pid/24/7186> <https://dblp.org/rdf/schema#webpage> ?answer }" }
76	Q0102	MULTI_FACT	 "Mention the venues in which Wang, Ke published." 	dEntities=[ DEntity(X1, mention, Mention, VERB, null, 1, null),  DEntity(X2, venue, venues, NOUN, the, 3, null),  DEntity(X4, Ke Wang, Wang, PROPN, null, 6, null),  DEntity(X5, publish, published, VERB, null, 9, null)],  dConditions=[ DCondition(X1, has_text, mention, propriedades= [] --- []),  DCondition(X2, has_text, venue, propriedades= [] --- []),  DCondition(X3, has_text, which, propriedades= [] --- []),  DCondition(X4, has_name, Ke Wang, propriedades= [] --- []),  DCondition(X5, has_text, publish, propriedades= [] --- []),  DCondition(X1, obj, X2, propriedades= [] --- []),  DCondition(X5, subj, X4, propriedades= [] --- []),  DCondition(X5, obl_in, X2, propriedades= [] --- [])]	dEntities=[ DEntity(X1, mention, Mention, VERB, null, null, Query),  DEntity(X2, venue, venues, NOUN, the, null, ConceptDocument),  DEntity(X3, Ke Wang, Wang, PROPN, null, null, Person),  DEntity(X4, publish, published, VERB, null, null, Create),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, mention, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, venue, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, Ke Wang, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, obj, X2, propriedades= [select] --- []),  DCondition(X4, subj, X3, propriedades= [who_create] --- []),  DCondition(X4, obl_in, X2, propriedades= [create_in] --- []),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, null, propriedades= [] --- []),  DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 12  numEntitiesNOk = 0  numClassesOk = 3]	SELECT ?conceptDocument1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Ke Wang","i")). ?document1 dblp:authoredBy ?person1 . ?document1 ?prop1 ?conceptDocument1 . filter (regex(?prop,"publish","i")). } 	4	TC11	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?x <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/w/KeWang> . ?x <https://dblp.org/rdf/schema#publishedIn> ?answer }" }
77	Q0105	MULTI_FACT	 "In which conferences or journals has Amit P. published papers?" 	n.a.	n.a.	n.a.	0	TC11	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?x <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/230/9003> . ?x <https://dblp.org/rdf/schema#publishedIn> ?answer }" }
78	Q0117	MULTI_FACT	 "List the venues in which G. Leduc published." 	dEntities=[ DEntity(X1, list, List, VERB, null, 1, null),  DEntity(X2, venue, venues, NOUN, the, 3, null),  DEntity(X3, G. Leduc, G., PROPN, null, 6, null),  DEntity(X4, publish, published, VERB, null, 8, null)],  dConditions=[ DCondition(X1, has_text, list, propriedades= [] --- []),  DCondition(X2, has_text, venue, propriedades= [] --- []),  DCondition(X3, has_text, which, propriedades= [] --- []),  DCondition(X3, has_name, G. Leduc, propriedades= [] --- []),  DCondition(X4, has_text, publish, propriedades= [] --- []),  DCondition(X1, obj, X2, propriedades= [] --- []),  DCondition(X4, subj, X3, propriedades= [] --- []),  DCondition(X4, obl_in, X2, propriedades= [] --- [])]	dEntities=[ DEntity(X1, list, List, VERB, null, null, Query),  DEntity(X2, venue, venues, NOUN, the, null, ConceptDocument),  DEntity(X3, G. Leduc, G., PROPN, null, null, Person),  DEntity(X4, publish, published, VERB, null, null, Create),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, list, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, venue, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, G. Leduc, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, obj, X2, propriedades= [select] --- []),  DCondition(X4, subj, X3, propriedades= [who_create] --- []),  DCondition(X4, obl_in, X2, propriedades= [create_in] --- []),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, null, propriedades= [] --- []),  DCondition(X1, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 12  numEntitiesNOk = 0  numClassesOk = 3]	SELECT ?conceptDocument1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"G. Leduc","i")). ?document1 dblp:authoredBy ?person1 . ?document1 ?prop1 ?conceptDocument1 . filter (regex(?prop,"publish","i")). } 	4	TC11	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?x <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/61/1225> . ?x <https://dblp.org/rdf/schema#publishedIn> ?answer }" }
79	Q0145	MULTI_FACT	 "Which venues has David Doukhan published in?" 	DEntity(X1, venue, venues, NOUN, which, 2, null),  DEntity(X2, David Doukhan, David, PROPN, null, 4, null),  DEntity(X3, publish, published, VERB, null, 6, null)],  dConditions=[ DCondition(X1, has_text, venue, propriedades= [] --- []),  DCondition(X2, has_name, David Doukhan, propriedades= [] --- []),  DCondition(X3, has_text, publish, propriedades= [] --- []),  DCondition(X3, obl_in, X1, propriedades= [] --- []),  DCondition(X3, subj, X2, propriedades= [] --- [])]	dEntities=[ DEntity(X1, venue, venues, NOUN, which, null, ConceptDocument),  DEntity(X2, David Doukhan, David, PROPN, null, null, Person),  DEntity(X3, publish, published, VERB, null, null, Create),  DEntity(X4, null, null, null, null, null, Query),  DEntity(X5, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, venue, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, David Doukhan, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obl_in, X1, propriedades= [create_in] --- []),  DCondition(X3, subj, X2, propriedades= [who_create] --- []),  DCondition(X4, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X1, propriedades= [select] --- []),  DCondition(X4, subj, X5, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 16  numEntitiesNOk = 0  numClassesOk = 2	SELECT ?conceptDocument1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"David Doukhan","i")). ?document1 dblp:authoredBy ?person1 . ?document1 ?prop1 ?conceptDocument1 . filter (regex(?prop,"publish","i")). } 	4	TC11	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?x <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/35/10650> . ?x <https://dblp.org/rdf/schema#publishedIn> ?answer }" }
80	Q0127	MULTI_FACT	 "What are the papers written by Frederic T. Chong and Susmit Biswas together?" 	dEntities=[ DEntity(X2, paper, papers, NOUN, the, 4, null),  DEntity(X3, write, written, VERB, null, 5, null),  DEntity(X4, Frederic T. Chong, Frederic, PROPN, null, 7, null),  DEntity(X5, Susmit Biswas, Susmit, PROPN, null, 11, null)],  dConditions=[ DCondition(X2, has_text, paper, propriedades= [] --- []),  DCondition(X3, has_text, write, propriedades= [] --- []),  DCondition(X4, has_name, Frederic T. Chong, propriedades= [] --- []),  DCondition(X5, has_name, Susmit Biswas, propriedades= [] --- []),  DCondition(X2, what, true, propriedades= [] --- []),  DCondition(X3, nsubj:pass, X2, propriedades= [] --- []),  DCondition(X3, obl_by, X4, propriedades= [] --- []),  DCondition(X3, obl_by, X5, propriedades= [] --- []),  DCondition(X3, mod, together, propriedades= [] --- [])]	dEntities=[ DEntity(X1, paper, papers, NOUN, the, null, Document),  DEntity(X2, write, written, VERB, null, null, Create),  DEntity(X3, Frederic T. Chong, Frederic, PROPN, null, null, Person),  DEntity(X4, Susmit Biswas, Susmit, PROPN, null, null, Person),  DEntity(X5, null, null, null, null, null, Query),  DEntity(X6, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, write, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, Frederic T. Chong, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, Susmit Biswas, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, nsubj:pass, X1, propriedades= [create_what] --- []),  DCondition(X2, obl_by, X3, propriedades= [who_create] --- []),  DCondition(X2, obl_by, X4, propriedades= [who_create] --- []),  DCondition(X2, mod, together, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, obj, X1, propriedades= [select] --- []),  DCondition(X5, subj, X6, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 20  numEntitiesNOk = 0  numClassesOk = 2]	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Frederic T. Chong”,"i")). ?person2 dblp:creatorName ?personName2 . filter (regex(?personName1,"Susmit Biswas","i")). ?document1 dblp:authoredBy ?person1 . ?document1 dblp:authoredBy ?person2 . } 	4	TC12	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/c/FTChong> . ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/33/6598> }" }
81	Q0136	MULTI_FACT	"What are the publications written by the authors C. Raymundo Ibañez and D. Vásquez Zúñiga in collaboration?" 	DEntity(X2, publication, publications, NOUN, the, 4, null),  DEntity(X3, write, written, VERB, null, 5, null),  DEntity(X4, author, authors, NOUN, the, 8, null),  DEntity(X6, D. Vásquez Zúñiga, D., PROPN, null, 13, null),  DEntity(X7, collaboration, collaboration, NOUN, null, 17, null)],  dConditions=[ DCondition(X2, has_text, publication, propriedades= [] --- []),  DCondition(X3, has_text, write, propriedades= [] --- []),  DCondition(X4, has_text, author, propriedades= [] --- []),  DCondition(X4, has_name, C. Raymundo Ibañez, propriedades= [] --- []),  DCondition(X6, has_name, D. Vásquez Zúñiga, propriedades= [] --- []),  DCondition(X7, has_text, collaboration, propriedades= [] --- []),  DCondition(X2, what, true, propriedades= [] --- []),  DCondition(X3, nsubj:pass, X2, propriedades= [] --- []),  DCondition(X3, obl_by, X4, propriedades= [] --- []),  DCondition(X3, obl_by, X6, propriedades= [] --- []),  DCondition(X3, obl_in, X7, propriedades= [] --- [])	dEntities=[ DEntity(X1, publication, publications, NOUN, the, null, Document),  DEntity(X2, write, written, VERB, null, null, Create),  DEntity(X3, author, authors, NOUN, the, null, Person),  DEntity(X4, D. Vásquez Zúñiga, D., PROPN, null, null, Person),  DEntity(X5, collaboration, collaboration, NOUN, null, null, ConceptDocument),  DEntity(X6, null, null, null, null, null, Query),  DEntity(X7, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, publication, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, write, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, C. Raymundo Ibañez, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, D. Vásquez Zúñiga, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, collaboration, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, what, true, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, nsubj:pass, X1, propriedades= [create_what] --- []),  DCondition(X2, obl_by, X3, propriedades= [who_create] --- []),  DCondition(X2, obl_by, X4, propriedades= [who_create] --- []),  DCondition(X2, obl_in, X5, propriedades= [create_in] --- []),  DCondition(X6, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X7, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X7, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, obj, X1, propriedades= [select] --- []),  DCondition(X6, subj, X7, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 24  numEntitiesNOk = 0  numClassesOk = 2]	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"C. Raymundo Ibañez”,"i")). ?person2 dblp:creatorName ?personName2 . filter (regex(?personName1,"D. Vásquez Zúñiga","i")). ?document1 dblp:authoredBy ?person1 . ?document1 dblp:authoredBy ?person2 . } 	4	TC12	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/150/7836> . ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/270/7018> }" }
82	Q0115	MULTI_FACT	"Which papers did the authors Jess Rowland and Adrian Freed co-write?"	dEntities=[ DEntity(X1, paper, papers, NOUN, which, 2, null),  DEntity(X2, author, authors, NOUN, the, 5, null),  DEntity(X3, Adrian Freed, Adrian, PROPN, null, 9, null),  DEntity(X4, co-write, co-write, VERB, null, 11, null)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- []),  DCondition(X2, has_text, author, propriedades= [] --- []),  DCondition(X2, has_name, Jess Rowland, propriedades= [] --- []),  DCondition(X3, has_name, Adrian Freed, propriedades= [] --- []),  DCondition(X4, has_text, co-write, propriedades= [] --- []),  DCondition(X4, obj, X1, propriedades= [] --- []),  DCondition(X4, subj, X2, propriedades= [] --- []),  DCondition(X4, subj, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, paper, papers, NOUN, which, null, Document),  DEntity(X2, author, authors, NOUN, the, null, Person),  DEntity(X3, Adrian Freed, Adrian, PROPN, null, null, Person),  DEntity(X4, write, write, VERB, null, null, Create),  DEntity(X5, null, null, null, null, null, Query),  DEntity(X6, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Jess Rowland, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, Adrian Freed, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, write, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obj, X1, propriedades= [create_what] --- []),  DCondition(X4, subj, X2, propriedades= [who_create] --- []),  DCondition(X4, subj, X3, propriedades= [who_create] --- []),  DCondition(X5, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, obj, X1, propriedades= [select] --- []),  DCondition(X5, subj, X6, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 20  numEntitiesNOk = 0  numClassesOk = 3]	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"J. Rowland”,"i")). ?person2 dblp:creatorName ?personName2 . filter (regex(?personName1,"Adrian Freed","i")). ?document1 dblp:authoredBy ?person1 . ?document1 dblp:authoredBy ?person2 . } 	4	TC12	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/121/4922> . ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/88/2117> }" }
83	Q0108	MULTI_FACT	 "Which papers did Ralf Bill publish in AGIT Journal?" 	DEntity(X1, paper, papers, NOUN, which, 2, null),  DEntity(X2, Ralf Bill, Bill, PROPN, null, 5, null),  DEntity(X3, publish, publish, VERB, null, 6, null),  DEntity(X4, AGIT Journal, Journal, PROPN, null, 9, null)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- []),  DCondition(X2, has_name, Ralf Bill, propriedades= [] --- []),  DCondition(X3, has_text, publish, propriedades= [] --- []),  DCondition(X4, has_name, AGIT Journal, propriedades= [] --- []),  DCondition(X3, obj, X1, propriedades= [] --- []),  DCondition(X3, subj, X2, propriedades= [] --- []),  DCondition(X3, obl_in, X4, propriedades= [] --- [])]	dEntities=[ DEntity(X1, paper, papers, NOUN, which, null, Document),  DEntity(X2, Ralf Bill, Bill, PROPN, null, null, Person),  DEntity(X3, publish, publish, VERB, null, null, Create),  DEntity(X4, AGIT Journal, Journal, PROPN, null, null, ConceptDocument),  DEntity(X5, null, null, null, null, null, Query),  DEntity(X6, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Ralf Bill, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, AGIT Journal, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [create_what] --- []),  DCondition(X3, subj, X2, propriedades= [who_create] --- []),  DCondition(X3, obl_in, X4, propriedades= [create_in] --- []),  DCondition(X5, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, obj, X1, propriedades= [select] --- []),  DCondition(X5, subj, X6, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 20  numEntitiesNOk = 0  numClassesOk = 2]	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Ralf Bill","i")). ?document1 dblp:authoredBy ?person1 . ?document1 ?prop1 ?conceptDocument1 . filter (regex(?prop,"publish","i")). filter (regex(?conceptDocument1,"AGIT Journal","i")).  } 	4	TC13	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/99/3431> . ?answer <https://dblp.org/rdf/schema#publishedIn> 'AGIT Journal' }" }
84	Q0116	MULTI_FACT	 "What publications did Kin Hong Wong publish in Int. J. Robotics Autom.?" 	DEntity(X1, publication, publications, NOUN, what, 2, null),  DEntity(X2, Hong Kin Wong, Kin, PROPN, null, 4, null),  DEntity(X3, publish, publish, VERB, null, 7, null),  DEntity(X4, Robotics Int. J. Autom, Autom, PROPN, null, 12, null)],  dConditions=[ DCondition(X1, has_text, publication, propriedades= [] --- []),  DCondition(X2, has_name, Hong Kin Wong, propriedades= [] --- []),  DCondition(X3, has_text, publish, propriedades= [] --- []),  DCondition(X4, has_name, Robotics Int. J. Autom, propriedades= [] --- []),  DCondition(X3, obj, X1, propriedades= [] --- []),  DCondition(X3, subj, X2, propriedades= [] --- []),  DCondition(X3, obl_in, X4, propriedades= [] --- [])]	dEntities=[ DEntity(X1, publication, publications, NOUN, what, null, Document),  DEntity(X2, Hong Kin Wong, Kin, PROPN, null, null, Person),  DEntity(X3, publish, publish, VERB, null, null, Create),  DEntity(X4, Robotics Int. J. Autom, Autom, PROPN, null, null, Date),  DEntity(X5, null, null, null, null, null, Query),  DEntity(X6, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, publication, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Hong Kin Wong, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, Robotics Int. J. Autom, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [create_what] --- []),  DCondition(X3, subj, X2, propriedades= [who_create] --- []),  DCondition(X3, obl_in, X4, propriedades= [action_date] --- []),  DCondition(X5, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_name, what, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, obj, X1, propriedades= [select] --- []),  DCondition(X5, subj, X6, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 20  numEntitiesNOk = 0  numClassesOk = 1]	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Kin Hong Wong","i")). ?document1 dblp:authoredBy ?person1 . ?document1 ?prop1 ?conceptDocument1 . filter (regex(?prop,"publish","i")). filter (regex(?conceptDocument1,"Robotics J. Int. Autom.","i")).  } 	4	TC13	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/11/2362> . ?answer <https://dblp.org/rdf/schema#publishedIn> 'Int. J. Robotics Autom.' }" }
85	Q0132	MULTI_FACT	 "In Comput. Commun. Rev., which papers did C. F. Broomfield publish?" 	dEntities=[ DEntity(X1, Comput. Commun. Rev., Comput., PROPN, null, 2, null),  DEntity(X2, paper, papers, NOUN, which, 5, null),  DEntity(X3, C. F. Broomfield, Broomfield, PROPN, null, 9, null),  DEntity(X4, publish, publish, VERB, null, 10, null)],  dConditions=[ DCondition(X1, has_name, Comput. Commun. Rev., propriedades= [] --- []),  DCondition(X2, has_text, paper, propriedades= [] --- []),  DCondition(X3, has_name, C. F. Broomfield, propriedades= [] --- []),  DCondition(X4, has_text, publish, propriedades= [] --- []),  DCondition(X4, obl_in, X1, propriedades= [] --- []),  DCondition(X4, obj, X2, propriedades= [] --- []),  DCondition(X4, subj, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, Comput. Commun. Rev., Comput., PROPN, null, null, ConceptDocument),  DEntity(X2, paper, papers, NOUN, which, null, Document),  DEntity(X3, C. F. Broomfield, Broomfield, PROPN, null, null, Person),  DEntity(X4, publish, publish, VERB, null, null, Create),  DEntity(X5, null, null, null, null, null, Query),  DEntity(X6, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_name, Comput. Commun. Rev., propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, C. F. Broomfield, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obl_in, X1, propriedades= [create_in] --- []),  DCondition(X4, obj, X2, propriedades= [create_what] --- []),  DCondition(X4, subj, X3, propriedades= [who_create] --- []),  DCondition(X5, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, obj, X2, propriedades= [select] --- []),  DCondition(X5, subj, X6, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1  numPropsOk = 20  numEntitiesNOk = 0  numClassesOk = 2	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"C. F. Broomfield","i")). ?document1 dblp:authoredBy ?person1 . ?document1 ?prop1 ?conceptDocument1 . filter (regex(?prop,"publish","i")). filter (regex(?conceptDocument1,"Comput. Commun. Rev.","i")). } 	4	TC13	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/297/5335> . ?answer <https://dblp.org/rdf/schema#publishedIn> 'Comput. Commun. Rev.' }" }
86	Q0104	MULTI_FACT	 "List the co-authors of Shalini C.." 	dEntities=[ DEntity(X1, list, List, VERB, null, 1, null),  DEntity(X2, co-author, co-authors, NOUN, the, 3, null),  DEntity(X3, Shalini C., Shalini, PROPN, null, 5, null)],  dConditions=[ DCondition(X1, has_text, list, propriedades= [] --- []),  DCondition(X2, has_text, co-author, propriedades= [] --- []),  DCondition(X3, has_name, Shalini C., propriedades= [] --- []),  DCondition(X1, obj, X2, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, list, List, VERB, null, null, Query),  DEntity(X2, co-author, co-authors, NOUN, the, null, Create),  DEntity(X3, Shalini C., Shalini, PROPN, null, null, Person),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, list, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, co-author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, Shalini C., propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, obj, X2, propriedades= [select] --- []),  DCondition(X2, of, X3, propriedades= [who_create] --- []),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, null, propriedades= [] --- []),  DCondition(X1, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 4  numEntitiesNOk = 0  numClassesOk = 2]]	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Shalini C.”,"i")). ?document1 dblp:authoredBy ?person1 . ?document1 dblp:authoredBy> ?answer . filter(?answer != ?person1) } 	4	TC14	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?x <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/72/7554> . ?x <https://dblp.org/rdf/schema#authoredBy> ?answer FILTER(?answer != <https://dblp.org/pid/72/7554>) }" }
87	Q0106	MULTI_FACT	 "Who are the co-authors of A. P. Felty?" 	dEntities=[ DEntity(X1, co-author, co-authors, NOUN, the, 4, null),  DEntity(X2, A. P. Felty, A., PROPN, null, 6, null)],  dConditions=[ DCondition(X1, has_text, co-author, propriedades= [] --- []),  DCondition(X2, has_name, A. P. Felty, propriedades= [] --- []),  DCondition(X1, who, true, propriedades= [] --- []),  DCondition(X1, of, X2, propriedades= [] --- [])]	dEntities=[ DEntity(X1, co-author, co-authors, NOUN, the, null, Create),  DEntity(X2, A. P. Felty, A., PROPN, null, null, Person),  DEntity(X3, null, null, null, null, null, Query),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, co-author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, A. P. Felty, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, who, true, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, of, X2, propriedades= [who_create] --- []),  DCondition(X3, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [select] --- []),  DCondition(X3, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 8  numEntitiesNOk = 0  numClassesOk = 1]]	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"A. P. Felty”,"i")). ?document1 dblp:authoredBy ?person1 . ?document1 dblp:authoredBy> ?answer . filter(?answer != ?person1) } 	4	TC14	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?x <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/f/AmyPFelty> . ?x <https://dblp.org/rdf/schema#authoredBy> ?answer FILTER(?answer != <https://dblp.org/pid/f/AmyPFelty>) }" }
88	Q0113	MULTI_FACT	 "Mention the co-authors of Thevenaz, L.." 	dEntities=[ DEntity(X1, mention, Mention, VERB, null, 1, null),  DEntity(X2, author, authors, NOUN, the, 3, null),  DEntity(X3, Thevenaz L., Thevenaz, PROPN, null, 5, null)],  dConditions=[ DCondition(X1, has_text, mention, propriedades= [] --- []),  DCondition(X2, has_text, author, propriedades= [] --- []),  DCondition(X3, has_name, Thevenaz L., propriedades= [] --- []),  DCondition(X1, obj, X2, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, mention, Mention, VERB, null, null, Query),  DEntity(X2, author, authors, NOUN, the, null, Create),  DEntity(X3, Thevenaz L., Thevenaz, PROPN, null, null, Person),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, mention, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, Thevenaz L., propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, obj, X2, propriedades= [select] --- []),  DCondition(X2, of, X3, propriedades= [who_create] --- []),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, null, propriedades= [] --- []),  DCondition(X1, subj, X4, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 4  numEntitiesNOk = 0  numClassesOk = 2]]	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Thevenaz L.”,"i")). ?document1 dblp:authoredBy ?person1 . ?document1 dblp:authoredBy> ?answer . filter(?answer != ?person1) } 	4	TC14	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?x <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/265/7061> . ?x <https://dblp.org/rdf/schema#authoredBy> ?answer FILTER(?answer != <https://dblp.org/pid/265/7061>) }" }
89	Q0143	MULTI_FACT	 "Mention the co-authors of Li, Xueming." 	DEntity(X1, mention, Mention, VERB, null, 1, null),  DEntity(X2, co-author, co-authors, NOUN, the, 3, null),  DEntity(X3, Xueming Li, Li, PROPN, null, 5, null)],  dConditions=[ DCondition(X1, has_text, mention, propriedades= [] --- []),  DCondition(X2, has_text, co-author, propriedades= [] --- []),  DCondition(X3, has_name, Xueming Li, propriedades= [] --- []),  DCondition(X1, obj, X2, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- [])]	DEntity(X1, mention, Mention, VERB, null, null, Query),  DEntity(X2, co-author, co-authors, NOUN, the, null, Create),  DEntity(X3, Xueming Li, Li, PROPN, null, null, Person),  DEntity(X4, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, mention, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, co-author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, Xueming Li, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, obj, X2, propriedades= [select] --- []),  DCondition(X2, of, X3, propriedades= [who_create] --- []),  DCondition(X4, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, null, propriedades= [] --- []),  DCondition(X1, subj, X4, propriedades= [qQualifier] --- [])]	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Xueming Li”,"i")). ?document1 dblp:authoredBy ?person1 . ?document1 dblp:authoredBy> ?answer . filter(?answer != ?person1) } 	4	TC14	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?x <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/67/2097> . ?x <https://dblp.org/rdf/schema#authoredBy> ?answer FILTER(?answer != <https://dblp.org/pid/67/2097>) }" }
90	Q0107	MULTI_FACT	 "In the last 8 years, which papers did Shaoxiong Ji publish?" 	dEntities=[ DEntity(X1, year, years, NOUN, the, 5, null),  DEntity(X2, paper, papers, NOUN, which, 8, null),  DEntity(X3, Shaoxiong Ji, Ji, PROPN, null, 11, null),  DEntity(X4, publish, publish, VERB, null, 12, null)],  dConditions=[ DCondition(X1, has_text, year, propriedades= [] --- []),  DCondition(X2, has_text, paper, propriedades= [] --- []),  DCondition(X3, has_name, Shaoxiong Ji, propriedades= [] --- []),  DCondition(X4, has_text, publish, propriedades= [] --- []),  DCondition(X1, mod, last, propriedades= [] --- []),  DCondition(X1, number, 8, propriedades= [] --- []),  DCondition(X4, obl_in, X1, propriedades= [] --- []),  DCondition(X4, obj, X2, propriedades= [] --- []),  DCondition(X4, subj, X3, propriedades= [] --- [])]	dEntities=[ DEntity(X1, year, years, NOUN, the, null, Date),  DEntity(X2, paper, papers, NOUN, which, null, Document),  DEntity(X3, Shaoxiong Ji, Ji, PROPN, null, null, Person),  DEntity(X4, publish, publish, VERB, null, null, Create),  DEntity(X5, null, null, null, null, null, Query),  DEntity(X6, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, year, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, Shaoxiong Ji, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, mod, last, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, number, 8, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, obl_in, X1, propriedades= [action_date] --- []),  DCondition(X4, obj, X2, propriedades= [create_what] --- []),  DCondition(X4, subj, X3, propriedades= [who_create] --- []),  DCondition(X5, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, obj, X2, propriedades= [select] --- []),  DCondition(X5, subj, X6, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 20  numEntitiesNOk = 0  numClassesOk = 3]	SELECT  ?document WHERE {  ?document dblp:authoredBy ?creator .  ?creator dblp:creatorName ?creatorName . filter (regex(?creatorName,"Shaoxiong Ji","i")). ?document dblp:yearOfPublication ?year. filter (?year > year(now()) -8).  } 	4	TC15	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/227/0291> . ?answer <https://dblp.org/rdf/schema#yearOfPublication> ?y FILTER(?y > YEAR(NOW())-8) }" }
91	Q0139	MULTI_FACT	 "Which papers did Changcheng Huang publish in the last 8 years?" 	dEntities=[ DEntity(X1, paper, papers, NOUN, which, 2, null),  DEntity(X2, Changcheng Huang, Changcheng, PROPN, null, 4, null),  DEntity(X3, publish, publish, VERB, null, 6, null),  DEntity(X4, year, years, NOUN, the, 11, null)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- []),  DCondition(X2, has_name, Changcheng Huang, propriedades= [] --- []),  DCondition(X3, has_text, publish, propriedades= [] --- []),  DCondition(X4, has_text, year, propriedades= [] --- []),  DCondition(X3, obj, X1, propriedades= [] --- []),  DCondition(X3, subj, X2, propriedades= [] --- []),  DCondition(X4, mod, last, propriedades= [] --- []),  DCondition(X4, number, 8, propriedades= [] --- []),  DCondition(X3, obl_in, X4, propriedades= [] --- [])] 	dEntities=[ DEntity(X1, paper, papers, NOUN, which, null, Document),  DEntity(X2, Changcheng Huang, Changcheng, PROPN, null, null, Person),  DEntity(X3, publish, publish, VERB, null, null, Create),  DEntity(X4, year, years, NOUN, the, null, Date),  DEntity(X5, null, null, null, null, null, Query),  DEntity(X6, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Changcheng Huang, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, year, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [create_what] --- []),  DCondition(X3, subj, X2, propriedades= [who_create] --- []),  DCondition(X4, mod, last, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, number, 8, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obl_in, X4, propriedades= [action_date] --- []),  DCondition(X5, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, obj, X1, propriedades= [select] --- []),  DCondition(X5, subj, X6, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 20  numEntitiesNOk = 0  numClassesOk = 3]	SELECT  ?document WHERE {  ?document dblp:authoredBy ?creator .  ?creator dblp:creatorName ?creatorName . filter (regex(?creatorName,"Changcheng Huang","i")). ?document dblp:yearOfPublication ?year. filter (?year > year(now()) -8).  } 	4	TC15	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/75/2652> . ?answer <https://dblp.org/rdf/schema#yearOfPublication> ?y FILTER(?y > YEAR(NOW())-8) }" }
92	Q0141	MULTI_FACT	 "Which papers did the author M. Vatani publish in the last 3 years?" 	dEntities=[ DEntity(X1, paper, papers, NOUN, which, 2, null),  DEntity(X2, author, author, NOUN, the, 5, null),  DEntity(X3, publish, publish, VERB, null, 8, null),  DEntity(X4, year, years, NOUN, the, 13, null)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- []),  DCondition(X2, has_text, author, propriedades= [] --- []),  DCondition(X2, has_name, M., propriedades= [] --- []),  DCondition(X2, has_name, Vatani, propriedades= [] --- []),  DCondition(X3, has_text, publish, propriedades= [] --- []),  DCondition(X4, has_text, year, propriedades= [] --- []),  DCondition(X3, obj, X1, propriedades= [] --- []),  DCondition(X3, subj, X2, propriedades= [] --- []),  DCondition(X4, mod, last, propriedades= [] --- []),  DCondition(X4, number, 3, propriedades= [] --- []),  DCondition(X3, obl_in, X4, propriedades= [] --- [])] 	dEntities=[ DEntity(X1, paper, papers, NOUN, which, null, Document),  DEntity(X2, author, author, NOUN, the, null, Person),  DEntity(X3, publish, publish, VERB, null, null, Create),  DEntity(X4, year, years, NOUN, the, null, Date),  DEntity(X5, null, null, null, null, null, Query),  DEntity(X6, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, M., propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Vatani, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, year, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [create_what] --- []),  DCondition(X3, subj, X2, propriedades= [who_create] --- []),  DCondition(X4, mod, last, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, number, 3, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obl_in, X4, propriedades= [action_date] --- []),  DCondition(X5, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, obj, X1, propriedades= [select] --- []),  DCondition(X5, subj, X6, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 20  numEntitiesNOk = 0  numClassesOk = 4]	SELECT  ?document WHERE {  ?document dblp:authoredBy ?creator .  ?creator dblp:creatorName ?creatorName . filter (regex(?creatorName,"M.","i")). filter (regex(?creatorName,"Vatani","i")). ?document dblp:yearOfPublication ?year. filter (?year > year(now()) -3). } 	4	TC15	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/158/4992> . ?answer <https://dblp.org/rdf/schema#yearOfPublication> ?y FILTER(?y > YEAR(NOW())-3) }" }
93	Q0142	MULTI_FACT	 "List the papers published by Meng Yang in the last four years." 	dEntities=[ DEntity(X1, list, List, VERB, null, 1, null),  DEntity(X2, paper, papers, NOUN, the, 3, null),  DEntity(X3, publish, published, VERB, null, 4, null),  DEntity(X4, Meng Yang, Meng, PROPN, null, 6, null),  DEntity(X5, year, years, NOUN, the, 12, null)],  dConditions=[ DCondition(X1, has_text, list, propriedades= [] --- []),  DCondition(X2, has_text, paper, propriedades= [] --- []),  DCondition(X3, has_text, publish, propriedades= [] --- []),  DCondition(X4, has_name, Meng Yang, propriedades= [] --- []),  DCondition(X5, has_text, year, propriedades= [] --- []),  DCondition(X1, obj, X2, propriedades= [] --- []),  DCondition(X3, nsubj:pass, X2, propriedades= [] --- []),  DCondition(X3, obl_by, X4, propriedades= [] --- []),  DCondition(X5, mod, last, propriedades= [] --- []),  DCondition(X5, number, four, propriedades= [] --- []),  DCondition(X3, obl_in, X5, propriedades= [] --- [])]	dEntities=[ DEntity(X1, list, List, VERB, null, null, Query),  DEntity(X2, paper, papers, NOUN, the, null, Document),  DEntity(X3, publish, published, VERB, null, null, Create),  DEntity(X4, Meng Yang, Meng, PROPN, null, null, Person),  DEntity(X5, year, years, NOUN, the, null, Date),  DEntity(X6, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, list, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, Meng Yang, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, year, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, obj, X2, propriedades= [aggregate, select] --- []),  DCondition(X3, nsubj:pass, X2, propriedades= [create_what] --- []),  DCondition(X3, obl_by, X4, propriedades= [who_create] --- []),  DCondition(X5, mod, last, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, number, four, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obl_in, X5, propriedades= [action_date, action_date_before, action_between, action_date_after] --- []),  DCondition(X6, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_name, null, propriedades= [] --- []),  DCondition(X1, subj, X6, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 16  numEntitiesNOk = 0  numClassesOk = 4]	SELECT  ?document WHERE {  ?document dblp:authoredBy ?creator .  ?creator dblp:creatorName ?creatorName . filter (regex(?creatorName,"Meng Yang","i")). ?document dblp:yearOfPublication ?year. filter (?year > year(now()) -4). } 	4	TC15	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/44/2761-13> . ?answer <https://dblp.org/rdf/schema#yearOfPublication> ?y FILTER(?y > YEAR(NOW())-4) }" }
94	Q0119	MULTI_FACT	 "List the papers published by Kwang-Ting Cheng with the author from Hong Kong University of Science and Technology." 	dEntities=[ DEntity(X1, list, List, VERB, null, 1, null),  DEntity(X2, paper, papers, NOUN, the, 3, null),  DEntity(X3, publish, published, VERB, null, 4, null),  DEntity(X4, Kwang Ting Cheng, Kwang, PROPN, null, 6, null),  DEntity(X5, author, author, NOUN, the, 12, null),  DEntity(X6, Kong Hong University, University, PROPN, null, 16, null)],  dConditions=[ DCondition(X1, has_text, list, propriedades= [] --- []),  DCondition(X2, has_text, paper, propriedades= [] --- []),  DCondition(X3, has_text, publish, propriedades= [] --- []),  DCondition(X4, has_name, Kwang Ting Cheng, propriedades= [] --- []),  DCondition(X5, has_text, author, propriedades= [] --- []),  DCondition(X6, has_name, Kong Hong University, propriedades= [] --- []),  DCondition(X1, obj, X2, propriedades= [] --- []),  DCondition(X3, nsubj:pass, X2, propriedades= [] --- []),  DCondition(X3, obl_by, X4, propriedades= [] --- []),  DCondition(X3, obl_with, X5, propriedades= [] --- []),  DCondition(X5, from, X6, propriedades= [] --- [])]	dEntities=[ DEntity(X1, list, List, VERB, null, null, Query),  DEntity(X2, paper, papers, NOUN, the, null, Document),  DEntity(X3, publish, published, VERB, null, null, Create),  DEntity(X4, Kwang Ting Cheng, Kwang, PROPN, null, null, Person),  DEntity(X5, author, author, NOUN, the, null, Person),  DEntity(X6, Kong Hong University, University, PROPN, null, null, Place),  DEntity(X7, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, list, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, Kwang Ting Cheng, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_name, Kong Hong University, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, obj, X2, propriedades= [select] --- []),  DCondition(X3, nsubj:pass, X2, propriedades= [create_what] --- []),  DCondition(X3, obl_by, X4, propriedades= [ who_create] --- []),  DCondition(X3, obl_with, X5, propriedades= [create_with] --- []),  DCondition(X5, from, X6, propriedades= [author_from] --- []),  DCondition(X7, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X7, has_name, null, propriedades= [] --- []),  DCondition(X1, subj, X7, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 16  numEntitiesNOk = 0  numClassesOk = 4]	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Kwang-Ting Cheng”,"i")). ?document1 dblp:authoredBy ?person1 . ?document1 dblp:authoredBy ?person2 . person2 dblp:primaryAffiliation ?place1 . filter (regex(?place1,"Hong Kong University of Science and Technology”,"i")). } 	4	TC16	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/c/KwangTingCheng> . ?answer <https://dblp.org/rdf/schema#authoredBy> ?y . ?y <https://dblp.org/rdf/schema#primaryAffiliation> 'Hong Kong University of Science and Technology' }" }
95	Q0125	MULTI_FACT	"What research papers did Dimitrov, Dimitar K. publish with the author affiliated to ETH Zürich, Switzerland?" 	dEntities=[ DEntity(X1, research paper, papers, NOUN, what, null, Document),  DEntity(X2, Dimitar K. Dimitrov, Dimitrov, PROPN, null, null, Person),  DEntity(X3, publish, publish, VERB, null, null, Create),  DEntity(X4, author, author, NOUN, the, null, Person),  DEntity(X5, affiliate, affiliated, VERB, null, null, Associate),  DEntity(X6, Switzerland ETH Zürich, ETH, PROPN, null, null, Person),  DEntity(X7, null, null, null, null, null, Query),  DEntity(X8, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, research paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Dimitar K. Dimitrov, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, affiliate, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_name, Switzerland ETH Zürich, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [create_what] --- []),  DCondition(X3, subj, X2, propriedades= [who_create] --- []),  DCondition(X3, obl_with, X4, propriedades= [create_with] --- []),  DCondition(X5, nsubj:pass, X4, propriedades= [assoc_Person] --- []),  DCondition(X5, obl_to, X6, propriedades= [assoc_Person] --- []),  DCondition(X7, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X8, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X8, has_name, what, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X7, obj, X1, propriedades= [select] --- []),  DCondition(X7, subj, X8, propriedades= [qQualifier] --- [])]	dEntities=[ DEntity(X1, research paper, papers, NOUN, what, null, Document),  DEntity(X2, Dimitar K. Dimitrov, Dimitrov, PROPN, null, null, Person),  DEntity(X3, publish, publish, VERB, null, null, Create),  DEntity(X4, author, author, NOUN, the, null, Person),  DEntity(X5, affiliate, affiliated, VERB, null, null, Associate),  DEntity(X6, Switzerland ETH Zürich, ETH, PROPN, null, null, Place),  DEntity(X7, null, null, null, null, null, Query),  DEntity(X8, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, research paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Dimitar K. Dimitrov, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, affiliate, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_name, Switzerland ETH Zürich, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [create_what] --- []),  DCondition(X3, subj, X2, propriedades= [who_create] --- []),  DCondition(X3, obl_with, X4, propriedades= [create_with] --- []),  DCondition(X5, nsubj:pass, X4, propriedades= [assoc_Person] --- []),  DCondition(X5, obl_to, X6, propriedades= [action_place] --- []),  DCondition(X7, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X8, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X8, has_name, what, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X7, obj, X1, propriedades= [select] --- []),  DCondition(X7, subj, X8, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 24  numEntitiesNOk = 0  numClassesOk = 3]]	SELECT ?document WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Dimitar K. Dimitrov”,"i")). ?document1 dblp:authoredBy ?person1 . ?document1 dblp:authoredBy ?person2 . person2 dblp:primaryAffiliation ?place1 . filter (regex(?place1,"Switzerland ETH Zürich”,"i")). } 	4	TC16	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/44/4685-2> . ?answer <https://dblp.org/rdf/schema#authoredBy> ?y . ?y <https://dblp.org/rdf/schema#primaryAffiliation> 'ETH Z\\u00FCrich, Switzerland' }" }
96	Q0137	MULTI_FACT	 "What research papers did Peng Gong publish with the author affiliated to Beijing Institute of Technology, School of Mechatronical Engineering, China?" 	dEntities=[ DEntity(X1, research paper, papers, NOUN, what, 3, null),  DEntity(X2, Peng Gong, Peng, PROPN, null, 5, null),  DEntity(X3, publish, publish, VERB, null, 7, null),  DEntity(X4, author, author, NOUN, the, 10, null),  DEntity(X5, affiliate, affiliated, VERB, null, 11, null),  DEntity(X6, China School Beijing Institute, Institute, PROPN, null, 14, null),  DEntity(X7, Technology, Technology, PROPN, null, 16, null),  DEntity(X8, Engineering, Engineering, PROPN, null, 21, null)],  dConditions=[ DCondition(X1, has_text, research paper, propriedades= [] --- []),  DCondition(X2, has_name, Peng Gong, propriedades= [] --- []),  DCondition(X3, has_text, publish, propriedades= [] --- []),  DCondition(X4, has_text, author, propriedades= [] --- []),  DCondition(X5, has_text, affiliate, propriedades= [] --- []),  DCondition(X6, has_name, China School Beijing Institute, propriedades= [] --- []),  DCondition(X7, has_name, Technology, propriedades= [] --- []),  DCondition(X8, has_name, Engineering, propriedades= [] --- []),  DCondition(X3, obj, X1, propriedades= [] --- []),  DCondition(X3, subj, X2, propriedades= [] --- []),  DCondition(X3, obl_with, X4, propriedades= [] --- []),  DCondition(X5, nsubj:pass, X4, propriedades= [] --- []),  DCondition(X5, obl_to, X6, propriedades= [] --- []),  DCondition(X6, of, X7, propriedades= [] --- []),  DCondition(X8, mod, Mechatronical, propriedades= [] --- []),  DCondition(X6, of, X8, propriedades= [] --- [])]	dEntities=[ DEntity(X1, research paper, papers, NOUN, what, null, Document),  DEntity(X2, Peng Gong, Peng, PROPN, null, null, Person),  DEntity(X3, publish, publish, VERB, null, null, Create),  DEntity(X4, author, author, NOUN, the, null, Person),  DEntity(X5, affiliate, affiliated, VERB, null, null, Associate),  DEntity(X6, China School Beijing Institute, Institute, PROPN, null, null, Place),  DEntity(X7, Technology, Technology, PROPN, null, null, Place),  DEntity(X8, Engineering, Engineering, PROPN, null, null, Place),  DEntity(X9, null, null, null, null, null, Query),  DEntity(X10, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, research paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_name, Peng Gong, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, affiliate, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_name, China School Beijing Institute, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X7, has_name, Technology, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X8, has_name, Engineering, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, obj, X1, propriedades= [create_what] --- []),  DCondition(X3, subj, X2, propriedades= [who_create] --- []),  DCondition(X3, obl_with, X4, propriedades= [create_with] --- []),  DCondition(X5, nsubj:pass, X4, propriedades= [assoc_Person] --- []),  DCondition(X5, obl_to, X6, propriedades= [action_place] --- []),  DCondition(X6, of, X7, propriedades= [place_specification] --- []),  DCondition(X8, mod, Mechatronical, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, of, X8, propriedades= [place_specification] --- []),  DCondition(X9, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X10, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X10, has_name, what, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X9, obj, X1, propriedades= [select] --- []),  DCondition(X9, subj, X10, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 32  numEntitiesNOk = 0  numClassesOk = 3]	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Peng Gong”,"i")). ?document1 dblp:authoredBy ?person1 . ?document1 dblp:authoredBy ?person2 . person2 dblp:primaryAffiliation ?place1 . filter (regex(?place1,"China School Beijing Institute”,"i")). filter (regex(?place1,"Technology”,"i")). filter (regex(?place1,"Engineering”,"i")). filter (regex(?place1,"Mechatronical”,"i")). }	4	TC16	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/27/1615-1> . ?answer <https://dblp.org/rdf/schema#authoredBy> ?y . ?y <https://dblp.org/rdf/schema#primaryAffiliation> 'Beijing Institute of Technology, School of Mechatronical Engineering, China' }" }
97	Q0101	MULTI_FACT	 "Mention the paper written by Joe-Wong, Carlee with Liang Zheng that was published in IEEE International Conference on Computer Communications." 	dEntities=[ DEntity(X1, mention, Mention, VERB, null, 1, null),  DEntity(X2, paper, paper, NOUN, the, 3, null),  DEntity(X3, write, written, VERB, null, 4, null),  DEntity(X4, Carlee JoeWong, JoeWong, PROPN, null, 6, null),  DEntity(X5, Liang Zheng, Liang, PROPN, null, 10, null),  DEntity(X6, publish, published, VERB, null, 14, null),  DEntity(X7, IEEE Conference, Conference, PROPN, null, 18, null),  DEntity(X8, Computer Communication, Communications, PROPN, null, 21, null)],  dConditions=[ DCondition(X1, has_text, mention, propriedades= [] --- []),  DCondition(X2, has_text, paper, propriedades= [] --- []),  DCondition(X3, has_text, write, propriedades= [] --- []),  DCondition(X4, has_name, Carlee JoeWong, propriedades= [] --- []),  DCondition(X5, has_name, Liang Zheng, propriedades= [] --- []),  DCondition(X6, has_text, that, propriedades= [] --- []),  DCondition(X6, has_text, publish, propriedades= [] --- []),  DCondition(X7, has_name, IEEE Conference, propriedades= [] --- []),  DCondition(X8, has_name, Computer Communication, propriedades= [] --- []),  DCondition(X1, obj, X2, propriedades= [] --- []),  DCondition(X3, nsubj:pass, X2, propriedades= [] --- []),  DCondition(X3, obl_by, X4, propriedades= [] --- []),  DCondition(X3, obl_with, X5, propriedades= [] --- []),  DCondition(X6, nsubj:pass, X2, propriedades= [] --- []),  DCondition(X7, mod, International, propriedades= [] --- []),  DCondition(X6, obl_in, X7, propriedades= [] --- []),  DCondition(X7, on, X8, propriedades= [] --- [])]	n.a.	n.a.	2	TC17	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/40/9937> . ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/61/7360-2> . ?answer <https://dblp.org/rdf/schema#publishedIn> 'INFOCOM' }" }
98	Q0109	MULTI_FACT	 "Which paper written by Sabrina Kurtz-Rossi with Julie McKinney was published in Inf. Serv. Use?" 	dEntities=[ DEntity(X1, paper, paper, NOUN, which, 2, null),  DEntity(X2, write, written, VERB, null, 3, null),  DEntity(X3, Sabrina Kurtz-Rossi, Sabrina, PROPN, null, 5, null),  DEntity(X4, Julie McKinney, Julie, PROPN, null, 10, null),  DEntity(X5, publish, published, VERB, null, 13, null),  DEntity(X6, Inf. Serv. Use, Inf., PROPN, null, 15, null)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- []),  DCondition(X2, has_text, write, propriedades= [] --- []),  DCondition(X3, has_name, Sabrina Kurtz-Rossi, propriedades= [] --- []),  DCondition(X4, has_name, Julie McKinney, propriedades= [] --- []),  DCondition(X5, has_text, publish, propriedades= [] --- []),  DCondition(X6, has_name, Inf. Serv. Use, propriedades= [] --- []),  DCondition(X5, nsubj:pass, X1, propriedades= [] --- []),  DCondition(X2, nsubj:pass, X1, propriedades= [] --- []),  DCondition(X2, obl_by, X3, propriedades= [] --- []),  DCondition(X3, with, X4, propriedades= [] --- []),  DCondition(X5, obl_in, X6, propriedades= [] --- [])]	dEntities=[ DEntity(X1, paper, paper, NOUN, which, null, Document),  DEntity(X2, write, written, VERB, null, null, Create),  DEntity(X3, Sabrina Kurtz-Rossi, Sabrina, PROPN, null, null, Person),  DEntity(X4, Julie McKinney, Julie, PROPN, null, null, Person),  DEntity(X5, publish, published, VERB, null, null, Create),  DEntity(X6, Inf. Serv. Use, Inf., PROPN, null, null, ConceptDocument),  DEntity(X7, null, null, null, null, null, Query),  DEntity(X8, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, write, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, Sabrina Kurtz-Rossi, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, Julie McKinney, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_name, Inf. Serv. Use, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, nsubj:pass, X1, propriedades= [create_what] --- []),  DCondition(X2, nsubj:pass, X1, propriedades= [create_what] --- []),  DCondition(X2, obl_by, X3, propriedades= [who_create] --- []),  DCondition(X3, with, X4, propriedades= [person_with] --- []),  DCondition(X5, obl_in, X6, propriedades= [create_in] --- []),  DCondition(X7, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X8, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X8, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X7, obj, X1, propriedades= [select] --- []),  DCondition(X7, subj, X8, propriedades= [qQualifier] --- [])]  numEntitiesOk = 1   numPropsOk = 24  numEntitiesNOk = -4  numClassesOk = 3	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Sabrina Kurtz-Rossi","i")). ?document1 dblp:authoredBy ?person1 . ?person2 dblp:creatorName ?personName2 . filter (regex(?personName2,"Julie McKinney","i")). ?document1 dblp:authoredBy ?person2 . ?document1 ?prop1 ?conceptDocument1 . filter (regex(?prop,"publish","i")) . filter (regex(?conceptDocument1,"Inf. Serv. Use","i")) . }	4	TC17	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/202/0639> . ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/202/0683> . ?answer <https://dblp.org/rdf/schema#publishedIn> 'Inf. Serv. Use' }" }
99	Q0123	MULTI_FACT	 "In IEEE Trans. Geosci. Remote. Sens., which paper written by Lee, W. with P. D. Gader was published?" 	dEntities=[ DEntity(X1, IEEE Trans. Geosci. Remote. Sens., IEEE, PROPN, null, 2, null),  DEntity(X2, paper, paper, NOUN, which, 5, null),  DEntity(X3, write, written, VERB, null, 6, null),  DEntity(X4, Lee, Lee, PROPN, null, 8, null),  DEntity(X5, P. D. Gader, P., PROPN, null, 12, null),  DEntity(X6, publish, published, VERB, null, 16, null)],  dConditions=[ DCondition(X1, has_name, IEEE Trans. Geosci. Remote. Sens., propriedades= [] --- []),  DCondition(X2, has_text, paper, propriedades= [] --- []),  DCondition(X3, has_text, write, propriedades= [] --- []),  DCondition(X4, has_name, Lee, propriedades= [] --- []),  DCondition(X4, has_name, W., propriedades= [] --- []),  DCondition(X5, has_name, P. D. Gader, propriedades= [] --- []),  DCondition(X6, has_text, publish, propriedades= [] --- []),  DCondition(X6, obl_in, X1, propriedades= [] --- []),  DCondition(X6, nsubj:pass, X2, propriedades= [] --- []),  DCondition(X3, nsubj:pass, X2, propriedades= [] --- []),  DCondition(X3, obl_by, X4, propriedades= [] --- []),  DCondition(X3, obl_with, X5, propriedades= [] --- [])]	dEntities=[ DEntity(X1, IEEE Trans. Geosci. Remote. Sens., IEEE, PROPN, null, null, ConceptDocument),  DEntity(X2, paper, paper, NOUN, which, null, Document),  DEntity(X3, write, written, VERB, null, null, Create),  DEntity(X4, Lee, Lee, PROPN, null, null, Person),  DEntity(X5, P. D. Gader, P., PROPN, null, null, Person),  DEntity(X6, publish, published, VERB, null, null, Create),  DEntity(X7, null, null, null, null, null, Query),  DEntity(X8, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_name, IEEE Trans. Geosci. Remote. Sens., propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, write, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, Lee, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_name, W., propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, P. D. Gader, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, has_text, publish, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, obl_in, X1, propriedades= [create_in] --- []),  DCondition(X6, nsubj:pass, X2, propriedades= [create_what] --- []),  DCondition(X3, nsubj:pass, X2, propriedades= [create_what] --- []),  DCondition(X3, obl_by, X4, propriedades= [who_create] --- []),  DCondition(X3, obl_with, X5, propriedades= [create_with] --- []),  DCondition(X7, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X8, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X8, has_name, which, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X7, obj, X2, propriedades= [select] --- []),  DCondition(X7, subj, X8, propriedades= [qQualifier] --- [])]  numEntitiesOk = 2   numPropsOk = 28  numEntitiesNOk = -4  numClassesOk = 3]	SELECT ?document1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Lee","i")). filter (regex(?personName1,"W.","i")). ?document1 dblp:authoredBy ?person1 . ?person2 dblp:creatorName ?personName2 . filter (regex(?personName2,"P. D. Gader","i")). ?document1 dblp:authoredBy ?person2 . ?document1 ?prop1 ?conceptDocument1 . filter (regex(?prop,"publish","i")) . filter (regex(?conceptDocument1,"IEEE Trans. Geosci. Remote. Sens.","i")) . }	4	TC17	{ "sparql": "SELECT DISTINCT ?answer WHERE { ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/82/9897> . ?answer <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/66/4077> . ?answer <https://dblp.org/rdf/schema#publishedIn> 'IEEE Trans. Geosci. Remote. Sens.' }" }
100	Q1145	MULTI_FACT	"Find the venue of the paper 'Edge-Coloring Bipartite Graphs' authored by Ajai K.."	dEntities=[ DEntity(X1, find, Find, VERB, null, 1, null),  DEntity(X2, venue, venue, NOUN, the, 3, null),  DEntity(X3, paper, paper, NOUN, the, 6, null),  DEntity(X4, author, authored, VERB, null, 8, null),  DEntity(X5, Ajai K., Ajai K., PROPN, null, 10, null)],  dConditions=[ DCondition(X1, has_text, find, propriedades= [] --- []),  DCondition(X2, has_text, venue, propriedades= [] --- []),  DCondition(X3, has_text, paper, propriedades= [] --- []),  DCondition(X3, has_name, Edge-Coloring Bipartite Graphs, propriedades= [] --- []),  DCondition(X4, has_text, author, propriedades= [] --- []),  DCondition(X5, has_name, Ajai K., propriedades= [] --- []),  DCondition(X1, obj, X2, propriedades= [] --- []),  DCondition(X2, of, X3, propriedades= [] --- []),  DCondition(X4, nsubj:pass, X3, propriedades= [] --- []),  DCondition(X4, obl_by, X5, propriedades= [] --- [])]	dEntities=[ DEntity(X1, find, Find, VERB, null, null, Create),  DEntity(X2, venue, venue, NOUN, the, null, ConceptDocument),  DEntity(X3, paper, paper, NOUN, the, null, Document),  DEntity(X4, author, authored, VERB, null, null, Create),  DEntity(X5, Ajai K., Ajai K., PROPN, null, null, Person),  DEntity(X6, null, null, null, null, null, Query),  DEntity(X7, null, null, null, null, null, Qualifier)],  dConditions=[ DCondition(X1, has_text, find, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X2, has_text, venue, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_text, paper, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X3, has_name, Edge-Coloring Bipartite Graphs, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X4, has_text, author, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X5, has_name, Ajai K., propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X1, obj, X2, propriedades= [create_in] --- []),  DCondition(X2, of, X3, propriedades= [conc_of_Document] --- []),  DCondition(X4, nsubj:pass, X3, propriedades= [create_what] --- []),  DCondition(X4, obl_by, X5, propriedades= [who_create] --- []),  DCondition(X6, has_text, Query, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X7, has_text, Qualifier, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X7, has_name, the, propriedades= [] --- [which, has_name, has_text, who, what]),  DCondition(X6, obj, X2, propriedades= [select] --- []),  DCondition(X6, subj, X7, propriedades= [qQualifier] --- [])]  numEntitiesOk = 2  numPropsOk = 20  numEntitiesNOk = 0  numClassesOk = 3]	SELECT ?conceptDocument1 WHERE { ?person1 dblp:creatorName ?personName1 . filter (regex(?personName1,"Ajai K.","i")). ?document1 dblp:authoredBy ?person1 . ?document1 ?prop1 ?conceptDocument1 . filter (regex(?prop1,"publish","i")). ?document1 dblp:title ?title1 . filter (regex(?title1,"Edge-Coloring Bipartite Graphs","i")). } 	4	TC17	{ "sparql": "SELECT DISTINCT ?answer WHERE { <https://dblp.org/rec/journals/jal/KapoorR00> <https://dblp.org/rdf/schema#authoredBy> <https://dblp.org/pid/70/6007> . <https://dblp.org/rec/journals/jal/KapoorR00> <https://dblp.org/rdf/schema#publishedIn> ?answer }" }